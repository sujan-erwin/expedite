<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="f498df5d-6f29-4d67-9c92-06cb32facf70" activeEnvironment="Default" name="patientSearch" resourceRoot="" soapui-version="5.6.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:restMockService id="e2087a65-bcc2-4acb-ba1b-471f838a45cf" port="8081" path="/" host="MACC02XP44PJGH6" name="specialtyexpedite/patient/" docroot=""><con:settings/><con:properties/><con:restMockAction name="specialtyexpedite/patient/documents" method="POST" resourcePath="/specialtyexpedite/patient/documents" id="331427a8-a2c7-4369-b17b-4b637f8d02b9"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" id="d5693829-200a-4d68-badd-dc76093716f0" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent><![CDATA[{"response":{"resources":[{"id":"7064520","gender":null,"dateOfBirth":"1956-08-23","phNumber":null,"surescriptsId":"8031465832","assigningAuthority":"2.16.840.1.113883.3.2054.2.1","name":{"firstName":"sdef","lastName":"fsggfg","middleName":null,"prefix":null,"suffix":null},"address":null,"prescriber":null,"docRefs":[{"id":"2.16.840.1.113883.3.2054.2.1.9001536402","title":"Surescripts Location Summary","status":"current","createdDate":"2020-11-30T23:06:57+00:00","type":"Location Summary","typeCode":"34133-9","orgName":"Surescripts","url":"/Binary?documentId=2.16.840.1.113883.3.2054.2.1.9001536402&repositoryId=2.16.840.1.113883.3.2054.2.1&homeCommunityId=2.16.840.1.113883.3.2054.2.1","contentType":"text/xml","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.79476801","title":"Continuity of Care Document","status":"current","createdDate":"2020-11-30T23:06:53+00:00","type":"Continuity of Care Document","typeCode":"34133-9","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.79476801&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.79476802","title":"Refill Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Refill","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.79476802&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Neskey","encounterDate":"2020-11-23T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.79476803","title":"Patient Outreach Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Patient Outreach","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.79476803&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Edmunds","encounterDate":"2020-11-23T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.79476804","title":"Patient Outreach Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Patient Outreach","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.79476804&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Edmunds","encounterDate":"2020-11-23T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.79476805","title":"Orders Only Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Orders Only","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.79476805&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Edmunds","encounterDate":"2020-11-23T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.79476806","title":"Refill Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Refill","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.79476806&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Edmunds","encounterDate":"2020-10-23T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.79476807","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.79476807&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Willer","encounterDate":"2020-09-23T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.79476808","title":"Refill Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Refill","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.79476808&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Willer","encounterDate":"2020-09-15T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.79476809","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.79476809&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Willer","encounterDate":"2020-09-11T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.73087180","title":"Telephone Summary","status":"current","createdDate":"2020-09-11T14:05:25+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.73087180&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Willer","encounterDate":"2020-08-20T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949902","title":"Notes Only Summary","status":"current","createdDate":"2020-09-11T14:02:35+00:00","type":"Notes Only","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949902&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2020-08-19T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.79480668","title":"Refill Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Refill","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.79480668&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Willer","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949904","title":"Telephone Summary","status":"current","createdDate":"2020-09-11T13:51:32+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949904&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2020-07-06T16:50:21+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949905","title":"Telephone Summary","status":"current","createdDate":"2020-09-11T14:01:29+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949905&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2020-07-06T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949906","title":"Telephone Summary","status":"current","createdDate":"2020-09-11T14:01:52+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949906&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Cyr","encounterDate":"2020-06-22T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949907","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949907&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Edmunds","encounterDate":"2020-06-16T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949908","title":"Refill Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Refill","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949908&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Corbett","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949909","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949909&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Cyr","encounterDate":"2020-06-16T11:30:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949910","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949910&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2020-06-16T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949911","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949911&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2020-06-15T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949912","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949912&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2020-06-11T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949913","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949913&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2020-06-02T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949914","title":"Refill Summary","status":"current","createdDate":"2020-09-11T14:02:54+00:00","type":"Refill","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949914&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Willer","encounterDate":"2020-06-01T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949915","title":"Refill Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Refill","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949915&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Quitadamo","encounterDate":"2020-05-31T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949916","title":"Refill Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Refill","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949916&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2020-05-07T19:30:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949917","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949917&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2020-05-06T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949918","title":"Notes Only Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Notes Only","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949918&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2020-04-21T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949919","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949919&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Cyr","encounterDate":"2020-04-16T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949920","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949920&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Cyr","encounterDate":"2020-04-16T11:56:03+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949921","title":"TH Visit (TeleHealth) Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"TH Visit (TeleHealth)","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949921&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Cyr","encounterDate":"2020-04-14T11:19:41+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949922","title":"Office Visit Summary","status":"current","createdDate":"2020-09-11T14:07:48+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949922&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Brenot","encounterDate":"2020-03-25T11:50:15+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949923","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949923&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Neskey","encounterDate":"2020-03-17T11:41:51+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949924","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949924&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Cyr","encounterDate":"2020-03-04T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949925","title":"Laboratory Appointment Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Laboratory Appointment","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949925&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2020-02-22T13:38:02+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949926","title":"Refill Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Refill","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949926&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Quitadamo","encounterDate":"2020-02-03T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949927","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949927&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Quitadamo","encounterDate":"2020-02-03T13:50:22+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949928","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949928&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Quitadamo","encounterDate":"2020-01-15T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949929","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949929&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Quitadamo","encounterDate":"2019-12-13T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949930","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949930&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2019-12-10T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949931","title":"Clinical Support Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Clinical Support","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949931&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2019-12-04T13:37:34+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949932","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949932&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Quitadamo","encounterDate":"2019-12-03T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949933","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949933&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Quitadamo","encounterDate":"2019-11-18T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949934","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949934&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Neskey","encounterDate":"2019-11-18T13:10:10+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949935","title":"Refill Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Refill","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949935&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Quitadamo","encounterDate":"2019-11-12T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949936","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949936&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Quitadamo","encounterDate":"2019-11-06T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949937","title":"Refill Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Refill","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949937&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Quitadamo","encounterDate":"2019-10-31T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949938","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949938&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2019-10-31T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949939","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949939&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Quitadamo","encounterDate":"2019-10-31T13:14:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949940","title":"Patient Outreach Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Patient Outreach","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949940&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2019-10-23T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949941","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949941&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Quitadamo","encounterDate":"2019-10-22T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949942","title":"Clinical Support Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Clinical Support","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949942&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Cyr","encounterDate":"2019-10-22T12:27:43+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949943","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949943&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2019-09-27T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949944","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949944&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Quitadamo","encounterDate":"2019-09-19T12:15:54+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949945","title":"Patient Outreach Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Patient Outreach","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949945&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2019-09-16T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949946","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949946&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2019-09-12T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949947","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949947&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Cyr","encounterDate":"2019-09-11T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949948","title":"Refill Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Refill","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949948&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Cyr","encounterDate":"2019-09-10T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949949","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949949&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2019-08-22T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949950","title":"Ancillary Procedure Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Ancillary Procedure","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949950&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Fieseher","encounterDate":"2019-08-21T13:11:18+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949951","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949951&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Fieseher","encounterDate":"2019-08-21T11:54:37+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949952","title":"Refill Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Refill","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949952&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Quitadamo","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949953","title":"Clinical Support Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Clinical Support","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949953&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Cyr","encounterDate":"2019-08-15T12:28:16+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949954","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949954&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Cyr","encounterDate":"2019-07-31T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949955","title":"Refill Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Refill","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949955&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Corbett","encounterDate":"2019-07-28T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949956","title":"Refill Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Refill","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949956&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Fieseher","encounterDate":"2019-07-16T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949957","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949957&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2019-07-11T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949958","title":"Laboratory Appointment Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Laboratory Appointment","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949958&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2019-07-09T11:21:25+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949959","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949959&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2019-07-08T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949960","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949960&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Quitadamo","encounterDate":"2019-07-01T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949961","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949961&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2019-06-26T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949962","title":"Refill Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Refill","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949962&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Quitadamo","encounterDate":"2019-06-18T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949963","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949963&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2019-06-14T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949964","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949964&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Quitadamo","encounterDate":"2019-06-13T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949965","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949965&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2019-06-11T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949966","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949966&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Quitadamo","encounterDate":"2019-06-11T12:15:53+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949967","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949967&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2019-05-14T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949968","title":"Clinical Support Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Clinical Support","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949968&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Cyr","encounterDate":"2019-05-14T12:36:27+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949969","title":"Refill Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Refill","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949969&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Corbett","encounterDate":"2019-05-08T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949970","title":"Laboratory Appointment Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Laboratory Appointment","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949970&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2019-04-11T12:23:43+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949971","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949971&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Quitadamo","encounterDate":"2019-04-11T11:58:43+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949972","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949972&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Corbett","encounterDate":"2019-04-10T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949973","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949973&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Cyr","encounterDate":"2019-04-10T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949974","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949974&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Corbett","encounterDate":"2019-03-25T12:37:18+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949975","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949975&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Corbett","encounterDate":"2019-03-19T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949976","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949976&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Corbett","encounterDate":"2019-03-19T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949977","title":"Orders Only Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Orders Only","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949977&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Corbett","encounterDate":"2019-03-19T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949978","title":"Refill Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Refill","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949978&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2019-03-11T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949979","title":"Orders Only Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Orders Only","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949979&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2019-03-11T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949980","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949980&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Quitadamo","encounterDate":"2019-03-11T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949981","title":"Laboratory Appointment Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Laboratory Appointment","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949981&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2019-03-09T13:32:45+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949982","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949982&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Quitadamo","encounterDate":"2019-03-04T16:04:55+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949983","title":"Clinical Support Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Clinical Support","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949983&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Cyr","encounterDate":"2019-02-26T13:40:13+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949984","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949984&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2019-02-07T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949985","title":"Clinical Support Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Clinical Support","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949985&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Cyr","encounterDate":"2019-02-05T13:36:43+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949986","title":"Refill Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Refill","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949986&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Corbett","encounterDate":"2019-01-16T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949987","title":"Refill Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Refill","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949987&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Corbett","encounterDate":"2019-01-10T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949988","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949988&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Brenot","encounterDate":"2018-12-17T13:21:43+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949989","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949989&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Corbett","encounterDate":"2018-12-10T13:45:52+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949990","title":"Clinical Support Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Clinical Support","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949990&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Cyr","encounterDate":"2018-11-27T13:30:13+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949991","title":"Laboratory Appointment Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Laboratory Appointment","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949991&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2018-11-21T14:36:23+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949992","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949992&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2018-10-25T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949993","title":"Clinical Support Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Clinical Support","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949993&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Cyr","encounterDate":"2018-10-23T13:57:03+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949994","title":"Patient Outreach Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Patient Outreach","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949994&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2018-10-22T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949995","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949995&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Chrisemer","encounterDate":"2018-10-11T12:58:40+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949996","title":"External Results Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"External Results","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949996&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2018-10-01T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949997","title":"Patient Outreach Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Patient Outreach","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949997&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2018-09-28T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949998","title":"Patient Outreach Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Patient Outreach","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949998&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2018-09-28T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70949999","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70949999&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Chrisemer","encounterDate":"2018-09-27T12:53:12+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950000","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950000&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2018-09-25T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950001","title":"Ext Hospital Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Ext Hospital","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950001&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Hayes","encounterDate":"2018-09-25T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950002","title":"Ext Hospital Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Ext Hospital","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950002&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Guddeti","encounterDate":"2018-09-24T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950003","title":"Patient Outreach Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Patient Outreach","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950003&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2018-09-24T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950004","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950004&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2018-09-21T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950005","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950005&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2018-03-22T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950006","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950006&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Corbett","encounterDate":"2018-03-16T12:24:09+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950007","title":"Laboratory Appointment Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Laboratory Appointment","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950007&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2018-03-06T12:58:05+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950008","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950008&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Corbett","encounterDate":"2017-11-13T13:09:11+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950009","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950009&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Corbett","encounterDate":"2017-11-02T12:32:33+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950010","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950010&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2017-10-30T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950011","title":"Laboratory Appointment Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Laboratory Appointment","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950011&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2017-10-27T13:39:43+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950012","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950012&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Schwieger","encounterDate":"2017-10-27T13:08:58+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950013","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950013&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2016-08-16T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950014","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950014&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2016-07-08T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950015","title":"Laboratory Appointment Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Laboratory Appointment","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950015&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2016-07-07T20:17:29+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950016","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950016&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Corbett","encounterDate":"2016-07-07T19:31:28+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950017","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950017&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2016-06-30T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950018","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950018&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2016-05-02T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950019","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950019&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2016-04-18T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950020","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950020&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2016-04-15T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950021","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950021&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Corbett","encounterDate":"2016-04-15T17:39:04+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950022","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950022&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2016-03-25T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950023","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950023&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2016-03-25T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950024","title":"Laboratory Appointment Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Laboratory Appointment","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950024&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2016-03-25T11:53:06+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950025","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950025&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Corbett","encounterDate":"2016-03-22T11:53:09+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950026","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950026&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Smith","encounterDate":"2015-04-17T18:56:52+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950027","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950027&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2015-04-03T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950028","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950028&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2015-04-02T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950029","title":"Radiology Appointment Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Radiology Appointment","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950029&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2015-04-01T19:57:21+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950030","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950030&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Cavanagh","encounterDate":"2015-04-01T18:53:10+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950031","title":"Follow-Up Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Follow-Up","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950031&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Harnsberger","encounterDate":"2015-01-05T21:26:14+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950032","title":"Initial consult Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Initial consult","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950032&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Harnsberger","encounterDate":"2014-10-24T14:12:10+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950033","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950033&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2014-10-13T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950034","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950034&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2014-10-10T17:42:04+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950035","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950035&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Corbett","encounterDate":"2014-10-10T16:57:59+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950036","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950036&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Slusher","encounterDate":"2014-09-23T19:00:49+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950037","title":"Laboratory Appointment Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Laboratory Appointment","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950037&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Watson","encounterDate":"2014-04-17T19:07:11+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950038","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950038&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Watson","encounterDate":"2014-04-02T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950039","title":"Laboratory Appointment Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Laboratory Appointment","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950039&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Watson","encounterDate":"2014-04-01T19:14:30+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950040","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950040&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2014-03-31T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950041","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950041&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2014-03-27T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950042","title":"Refill Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Refill","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950042&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2014-03-27T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950043","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950043&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2014-01-20T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950044","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950044&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2014-01-09T20:57:07+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950045","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950045&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Gallagher","encounterDate":"2014-01-09T20:04:47+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950046","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950046&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2014-01-06T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950047","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950047&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Watson","encounterDate":"2014-01-02T18:40:29+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950048","title":"Refill Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Refill","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950048&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2013-12-27T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950049","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950049&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2013-10-08T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950050","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950050&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2013-10-02T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950051","title":"Refill Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Refill","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950051&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Watson","encounterDate":"2013-09-18T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950052","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950052&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Watson","encounterDate":"2013-08-14T12:24:06+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950053","title":"Refill Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Refill","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950053&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2013-07-11T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950054","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950054&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2013-07-03T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950055","title":"Laboratory Appointment Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Laboratory Appointment","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950055&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Watson","encounterDate":"2013-05-13T13:02:57+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950056","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950056&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Watson","encounterDate":"2013-05-13T12:30:41+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950057","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950057&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2013-04-02T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950058","title":"Refill Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Refill","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950058&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2013-03-19T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950059","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950059&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Sullivan","encounterDate":"2013-02-13T13:55:18+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950060","title":"Laboratory Appointment Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Laboratory Appointment","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950060&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Sullivan","encounterDate":"2013-02-12T20:57:10+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950061","title":"Refill Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Refill","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950061&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2013-02-11T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950062","title":"Orders Only Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Orders Only","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950062&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2012-12-28T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950063","title":"Refill Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Refill","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950063&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Sullivan","encounterDate":"2012-11-12T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950064","title":"Laboratory Appointment Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Laboratory Appointment","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950064&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Watson","encounterDate":"2012-11-12T14:12:22+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950065","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950065&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Sullivan","encounterDate":"2012-11-12T13:32:17+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950066","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950066&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2012-10-18T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950067","title":"Laboratory Appointment Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Laboratory Appointment","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950067&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Corbett","encounterDate":"2012-10-12T17:39:05+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950068","title":"Laboratory Appointment Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Laboratory Appointment","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950068&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Corbett","encounterDate":"2012-10-12T13:21:02+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950069","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950069&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Corbett","encounterDate":"2012-10-12T12:33:06+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950070","title":"Laboratory Appointment Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Laboratory Appointment","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950070&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Watson","encounterDate":"2012-10-12T13:20:45+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950071","title":"Orders Only Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Orders Only","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950071&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2012-09-14T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950072","title":"Laboratory Appointment Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Laboratory Appointment","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950072&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Watson","encounterDate":"2012-09-11T22:13:12+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950073","title":"Orders Only Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Orders Only","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950073&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Sullivan","encounterDate":"2012-09-10T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950074","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950074&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2012-09-10T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950075","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950075&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2012-08-29T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950076","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950076&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Sullivan","encounterDate":"2012-08-29T13:22:25+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950077","title":"Laboratory Appointment Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Laboratory Appointment","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950077&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Moyer","encounterDate":"2012-08-28T23:46:31+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950078","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950078&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2012-08-27T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950079","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950079&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2012-06-27T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950080","title":"Refill Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Refill","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950080&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2012-06-22T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950081","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950081&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Sullivan","encounterDate":"2012-05-30T12:49:02+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950082","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950082&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Gendron","encounterDate":"2012-05-25T18:01:58+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950083","title":"Laboratory Appointment Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Laboratory Appointment","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950083&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Watson","encounterDate":"2012-05-25T12:04:17+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950084","title":"Refill Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Refill","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950084&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2012-04-13T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950085","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950085&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2012-04-11T14:05:03+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950086","title":"Orders Only Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Orders Only","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950086&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2012-03-22T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950087","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950087&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2012-03-22T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950088","title":"Orders Only Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Orders Only","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950088&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2012-03-21T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950089","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950089&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2012-03-14T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950090","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950090&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2012-02-20T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950091","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950091&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2012-02-17T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950092","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950092&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Watson","encounterDate":"2012-01-30T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950093","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950093&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2012-01-25T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950094","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950094&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2012-01-10T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950095","title":"Refill Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Refill","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950095&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2012-01-10T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950096","title":"Clinical Support Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Clinical Support","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950096&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2012-01-06T20:24:56+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950097","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950097&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2012-01-05T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950098","title":"Laboratory Appointment Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Laboratory Appointment","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950098&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Watson","encounterDate":"2012-01-03T20:44:16+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950099","title":"Clinical Support Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Clinical Support","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950099&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2012-01-03T20:04:44+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950100","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950100&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2011-12-22T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950101","title":"Orders Only Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Orders Only","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950101&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2011-12-22T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950102","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950102&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Watson","encounterDate":"2011-12-16T12:54:04+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950103","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950103&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2011-12-08T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950104","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950104&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2011-10-17T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950105","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950105&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2011-09-26T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950106","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950106&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2011-09-16T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950107","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950107&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Sullivan","encounterDate":"2011-09-08T13:18:15+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950108","title":"Laboratory Appointment Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Laboratory Appointment","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950108&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Ellis","encounterDate":"2011-08-02T12:32:55+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950109","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950109&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Ellis","encounterDate":"2011-08-02T11:38:40+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950110","title":"Refill Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Refill","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950110&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2011-07-22T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950111","title":"Orders Only Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Orders Only","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950111&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Sullivan","encounterDate":"2011-07-21T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950112","title":"Telephone Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Telephone","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950112&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2011-07-21T00:00:00+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950113","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950113&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Sullivan","encounterDate":"2011-07-21T13:12:43+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950114","title":"Office Visit Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Office Visit","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950114&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","providerName":"Sullivan","encounterDate":"2011-04-28T12:28:17+00:00","data":null},{"id":"1.2.840.114350.1.13.236.2.7.8.688883.70950115","title":"Abstract Summary","status":"current","createdDate":"2020-11-30T23:06:54+00:00","type":"Abstract","typeCode":"11506-3","orgName":"Dartmouth-Hitchcock","url":"/Binary?documentId=1.2.840.114350.1.13.236.2.7.8.688883.70950115&repositoryId=1.2.840.114350.1.13.236.2.7.3.688884.100&homeCommunityId=1.2.840.114350.1.13.236.2.7.3.688884.100","contentType":"text/xml","encounterDate":"2011-04-14T00:00:00+00:00","data":null}]}],"statusDesc":"Success","statusCode":"0000","requestedBy":"9030879"}}]]></con:responseContent><con:header><con:name>Access-Control-Allow-Origin</con:name><con:value>*</con:value></con:header><con:header><con:name>Access-Control-Allow-Methods</con:name><con:value>POST, GET, OPTIONS, DELETE</con:value></con:header><con:header><con:name>Access-Control-Allow-Headers</con:name><con:value>x-requested-with, Content-type, x-correlationid, verification-token, appname </con:value></con:header></con:response></con:restMockAction><con:restMockAction name="specialtyexpedite/patient/documents" method="OPTIONS" resourcePath="/specialtyexpedite/patient/documents" id="ed034399-67dc-4dc6-97db-69d207d6b6c4"><con:settings/><con:defaultResponse>Response 2</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 2" id="eb4d9660-3128-4612-bb8a-d5edaf783d7e" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent/><con:header><con:name>Access-Control-Allow-Origin</con:name><con:value>*</con:value></con:header><con:header><con:name>Access-Control-Allow-Methods</con:name><con:value>POST, GET, OPTIONS, DELETE</con:value></con:header><con:header><con:name>Access-Control-Allow-Headers</con:name><con:value>x-requested-with, Content-type, x-correlationid, verification-token, appname </con:value></con:header></con:response></con:restMockAction><con:restMockAction name="specialtyexpedite/patient/documents/save" method="POST" resourcePath="/specialtyexpedite/patient/documents/save" id="60330a56-13ea-43e0-bbaa-b04ec3f36747"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" id="4a112682-1ea3-47e8-b9b8-f75db2e01539" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
    "response": {
        "resources": [
            {
                "successDocIds": [
                    "34561834"
                ],
                "failedDocIds": [
                    "345618344345618344345618344345618344345618344345618344345618344345618344345618344"
                ],
                "totalNoOfDocs": 2,
                "failedNoOfDocs": 1,
                "successNoOfDocs": 1,
                "errors": null
            }
        ],
        "statusDesc": "Success",
        "statusCode": "0000",
        "requestedBy": "234567"
    }
}</con:responseContent><con:header><con:name>Access-Control-Allow-Origin</con:name><con:value>*</con:value></con:header><con:header><con:name>Access-Control-Allow-Methods</con:name><con:value>POST, GET, OPTIONS, DELETE</con:value></con:header><con:header><con:name>Access-Control-Allow-Headers</con:name><con:value>x-requested-with, Content-type, x-correlationid, verification-token, appname </con:value></con:header></con:response></con:restMockAction><con:restMockAction name="specialtyexpedite/patient/documents/save" method="OPTIONS" resourcePath="/specialtyexpedite/patient/documents/save" id="c85371e2-4632-43b6-9067-3710f7bf298f"><con:settings/><con:defaultResponse>Response 2</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 2" id="2cf0a0f3-a65c-42e0-ba3e-645768f5f65f" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent/><con:header><con:name>Access-Control-Allow-Origin</con:name><con:value>*</con:value></con:header><con:header><con:name>Access-Control-Allow-Methods</con:name><con:value>POST, GET, OPTIONS, DELETE</con:value></con:header><con:header><con:name>Access-Control-Allow-Headers</con:name><con:value>x-requested-with, Content-type, x-correlationid, verification-token, appname </con:value></con:header></con:response></con:restMockAction><con:restMockAction name="specialtyexpedite/ql/patient" method="POST" resourcePath="/specialtyexpedite/ql/patient" id="b958efbc-1e8b-4647-8bdb-a0696c8c347b"><con:settings/><con:defaultResponse>Response 2</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" id="909fdec8-4324-4597-8a96-2cb74e6660c6" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent><![CDATA[{
  "response": {
    "resources": [
      {
        "id": "5000000",
        "gender": "Male",
        "dateOfBirth": "1935-04-08",
        "phNumber": "2075554443",
        "surescriptsId": null,
        "assigningAuthority": null,
        "docSearchDate": "05/06/2020",
        "name": {
          "firstName": "Test",
          "lastName": "Patient",
          "middleName": "M",
          "prefix": null,
          "suffix": null
        },
        "address": {
          "addressLine1": "100 Roy Hill Rd",
          "addressLine2": "",
          "city": "Chebeague Island",
          "state": "ME",
          "zipCode": "04017"
        },
        "prescriber": {
          "npi": "1922052919",
          "firstName": "George",
          "lastName": "Rivera",
          "zipCode": "92765",
          "expediteFlag": "Y",
          "accountName": "NE Cancer Specialists  -  Scarborough",
          "globalAccountName": "UCHealth"
        },
        "docRefs": [
          {
            "id": "468",
            "title": "Office Visit",
            "status": "Relevant Document Retrieval Success",
            "type": "Office Visit",
            "typeCode": "34133-9",
            "orgName": "UCLA Medical Center",
            "url": "/Binary?documentId=2.16.840.1.113883.3.2054.2.1.200676441&repositoryId=2.16.840.1.113883.3.2054.2.1&homeCommunityId=2.16.840.1.113883.3.2054.2.1",
            "contentType": "text/xml",
            "providerName": "Rivera",
            "encounterDate": "2019-10-15T00:00",
            "data": null
          },
          {
            "id": "463",
            "title": "Phone Encounter",
            "status": "Relevant Document Retrieval Success",
            "type": "Phone Encounter",
            "typeCode": "34133-9",
            "orgName": "UCLA Medical Center",
            "url": "/Binary?documentId=2.16.840.1.113883.3.2054.2.1.200675811&repositoryId=2.16.840.1.113883.3.2054.2.1&homeCommunityId=2.16.840.1.113883.3.2054.2.1",
            "contentType": "text/xml",
            "providerName": "Smith",
            "encounterDate": "2019-08-02T00:00",
            "data": null
          },
          {
            "id": "467",
            "title": "Orders Only",
            "status": "Filter Not Matched",
            "type": "Orders Only",
            "typeCode": "34133-9",
            "orgName": "Keck Medical USC",
            "url": "/Binary?documentId=2.16.840.1.113883.3.2054.2.1.200675751&repositoryId=2.16.840.1.113883.3.2054.2.1&homeCommunityId=2.16.840.1.113883.3.2054.2.1",
            "contentType": "text/xml",
            "providerName": "Jones",
            "encounterDate": "2020-01-12T00:00",
            "data": null
          },
          {
            "id": "466",
            "title": "Office Visit",
            "status": "Relevant Document Retrieval Success",
            "type": "Office Visit",
            "typeCode": "34133-9",
            "orgName": "UCLA Medical Center",
            "url": "/Binary?documentId=2.16.840.1.113883.3.2054.2.1.200675761&repositoryId=2.16.840.1.113883.3.2054.2.1&homeCommunityId=2.16.840.1.113883.3.2054.2.1",
            "contentType": "text/xml",
            "providerName": "Rivera",
            "encounterDate": "2020-03-05T00:00",
            "data": null
          },
          {
            "id": "465",
            "title": "Office Visit",
            "status": "Filter Not Matched",
            "type": "Office Visit",
            "typeCode": "34133-9",
            "orgName": "Keck Medical USC",
            "url": "/Binary?documentId=2.16.840.1.113883.3.2054.2.1.200676321&repositoryId=2.16.840.1.113883.3.2054.2.1&homeCommunityId=2.16.840.1.113883.3.2054.2.1",
            "contentType": "text/xml",
            "providerName": "Jones",
            "encounterDate": "2020-04-15T00:00",
            "data": null
          },
          {
            "id": "464",
            "title": "Phone Encounter",
            "status": "Relevant Document Retrieval Success",
            "type": "Phone Encounter",
            "typeCode": "34133-9",
            "orgName": "UCLA Medical Center",
            "url": "/Binary?documentId=2.16.840.1.113883.3.2054.2.1.200675661&repositoryId=2.16.840.1.113883.3.2054.2.1&homeCommunityId=2.16.840.1.113883.3.2054.2.1",
            "contentType": "text/xml",
            "providerName": "Smith",
            "encounterDate": "2020-05-01T00:00",
            "data": null
          },
          {
            "id": "463",
            "title": "Office Visit",
            "status": "Relevant Document Retrieval Success",
            "type": "Office Visit",
            "typeCode": "34133-9",
            "orgName": "UCLA Medical Center",
            "url": "/Binary?documentId=2.16.840.1.113883.3.2054.2.1.200676251&repositoryId=2.16.840.1.113883.3.2054.2.1&homeCommunityId=2.16.840.1.113883.3.2054.2.1",
            "contentType": "text/xml",
            "providerName": "Rivera",
            "encounterDate": "2020-05-05T00:00",
            "data": null
          },
          {
            "id": "462",
            "title": "Continuity of Care Document",
            "status": "CCD Retrieval Success",
            "type": "Continuity of Care Document",
            "typeCode": "34133-9",
            "orgName": "Keck Medical USC",
            "url": "/Binary?documentId=2.16.840.1.113883.3.2054.2.1.200676531&repositoryId=2.16.840.1.113883.3.2054.2.1&homeCommunityId=2.16.840.1.113883.3.2054.2.1",
            "contentType": "text/xml",
            "data": null
          },
          {
            "id": "461",
            "title": "Continuity of Care Document",
            "status": "CCD Retrieval Success",
            "type": "Continuity of Care Document",
            "typeCode": "34133-9",
            "orgName": "UCLA Medical Center",
            "url": "/Binary?documentId=2.16.840.1.113883.3.2054.2.1.200676511&repositoryId=2.16.840.1.113883.3.2054.2.1&homeCommunityId=2.16.840.1.113883.3.2054.2.1",
            "contentType": "text/xml",
            "data": null
          },
          {
            "id": "470",
            "title": "Location Summary",
            "status": "Filter Not Matched",
            "type": "Location Summary",
            "typeCode": "34133-9",
            "orgName": "Surescripts",
            "url": "/Binary?documentId=2.16.840.1.113883.3.2054.2.1.200675911&repositoryId=2.16.840.1.113883.3.2054.2.1&homeCommunityId=2.16.840.1.113883.3.2054.2.1",
            "contentType": "text/xml",
            "data": null
          }
        ]
      }
    ],
    "statusDesc": "Success",
    "statusCode": "0000",
    "requestedBy": "9308198"
  }
}]]></con:responseContent><con:header><con:name>Access-Control-Allow-Origin</con:name><con:value>*</con:value></con:header><con:header><con:name>Access-Control-Allow-Methods</con:name><con:value>POST, GET, OPTIONS, DELETE</con:value></con:header><con:header><con:name>Access-Control-Allow-Headers</con:name><con:value>x-requested-with, Content-type, x-correlationid, verification-token, appname </con:value></con:header></con:response></con:restMockAction><con:restMockAction name="specialtyexpedite/ql/patient" method="OPTIONS" resourcePath="/specialtyexpedite/ql/patient" id="9fca4fec-7d11-45da-ae19-991973aafbc8"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 2" id="a33c6450-6d01-458b-a496-71c443618fb5" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent/><con:header><con:name>Access-Control-Allow-Origin</con:name><con:value>*</con:value></con:header><con:header><con:name>Access-Control-Allow-Methods</con:name><con:value>POST, GET, OPTIONS, DELETE</con:value></con:header><con:header><con:name>Access-Control-Allow-Headers</con:name><con:value>x-requested-with, Content-type, x-correlationid, verification-token, appname </con:value></con:header></con:response></con:restMockAction><con:restMockAction name="specialtyexpedite/documentsearch/search" method="OPTIONS" resourcePath="/specialtyexpedite/documentsearch/search" id="5d8a6104-a6d6-44bb-89a4-b52506deecc4"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" id="388245c5-e0d1-43d5-8493-15308d1cb950" httpResponseStatus="200"><con:settings/><con:responseContent/><con:header><con:name>Access-Control-Allow-Origin</con:name><con:value>*</con:value></con:header><con:header><con:name>Access-Control-Allow-Methods</con:name><con:value>POST, GET, OPTIONS, DELETE</con:value></con:header><con:header><con:name>Access-Control-Allow-Headers</con:name><con:value>x-requested-with, Content-type, x-correlationid, verification-token, appname </con:value></con:header></con:response></con:restMockAction><con:restMockAction name="specialtyexpedite/documentsearch/search" method="POST" resourcePath="/specialtyexpedite/documentsearch/search" id="0b944f93-b867-412b-ac32-90a20a33be7f"><con:settings/><con:defaultResponse>Response 2</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 2" id="eb5f56f9-c464-471f-a9d8-887f6de71f54" httpResponseStatus="200"><con:settings/><con:responseContent>{"response":{"resources":[{"docIds":["467","466","469"]}],"statusDesc":"Success","statusCode":"0000","requestedBy":"9326570"}}</con:responseContent><con:header><con:name>Access-Control-Allow-Origin</con:name><con:value>*</con:value></con:header><con:header><con:name>Access-Control-Allow-Methods</con:name><con:value>POST, GET, OPTIONS, DELETE</con:value></con:header><con:header><con:name>Access-Control-Allow-Headers</con:name><con:value/></con:header></con:response></con:restMockAction><con:restMockAction name="specialtyexpedite/dl/patient" method="POST" resourcePath="/specialtyexpedite/dl/patient" id="082e27f7-4207-410d-83aa-dcd324ddeb6b"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" id="99b2fe22-a7d1-400a-b4dc-9254e25f1900" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent><![CDATA[{"response":{"resources":[{"id":"hbssrch1","gender":"Female","dateOfBirth":"1990-01-01","phNumber":"3375234496","surescriptsId":null,"assigningAuthority":null,"docSearchDate":"04/20/2020","name":{"firstName":"Pfname","lastName":"PatLname","middleName":"J","prefix":null,"suffix":null},"address":{"addressLine1":"PatAddress","addressLine2":null,"city":"PatTown","state":"IL","zipCode":"12345"},"prescriber":null,"docRefs":[{"id":"1001","title":"Humira 9_8 Travel","status":"Relevant Document Retrieval Success","type":"Encounter Summary","typeCode":"34133-9","orgName":"Humira Healthcare Org Name","url":"http://successurl/Binary?documentId=244313&repositoryId=2.16.840.1.113883.3.2054.2.1&homeCommunityId=2.16.840.1.113883.3.2054.2.1","contentType":"text/xml","providerName":"Dr1 Dr1Lname","encounterDate":"2020-12-10T10:34:49.273120","data":null},{"id":"1009","title":"Humira CCD","status":"Relevant CCD Retrieval Success","type":"Clinical Summary","typeCode":"34133-9","orgName":"Humira Healthcare Org Name","url":"http://successurl/Binary?documentId=248757&repositoryId=2.16.840.1.113883.3.2054.2.1&homeCommunityId=2.16.840.1.113883.3.2054.2.2","contentType":"text/xml","providerName":"Dr1 Dr1Lname","encounterDate":"2020-12-10T10:34:49.273531","data":null},{"id":"1008","title":"Humira 11_5 Telephone","status":"Relevant Document Retrieval Success","type":"Encounter Summary","typeCode":"34133-9","orgName":"Humira Healthcare Org Name","url":"http://successurl/Binary?documentId=189339&repositoryId=2.16.840.1.113883.3.2054.2.1&homeCommunityId=2.16.840.1.113883.3.2054.2.2","contentType":"text/xml","providerName":"Dr1 Dr1Lname","encounterDate":"2020-12-10T10:34:49.273510","data":null},{"id":"1007","title":"Humira 10_28 telephone","status":"Relevant Document Retrieval Success","type":"Encounter Summary","typeCode":"34133-9","orgName":"Humira Healthcare Org Name","url":"http://successurl/Binary?documentId=104254&repositoryId=2.16.840.1.113883.3.2054.2.1&homeCommunityId=2.16.840.1.113883.3.2054.2.1","contentType":"text/xml","providerName":"Dr1 Dr1Lname","encounterDate":"2020-12-10T10:34:49.273493","data":null},{"id":"1006","title":"Humira 9_24 Office visit","status":"Relevant Document Retrieval Success","type":"Encounter Summary","typeCode":"34133-9","orgName":"Humira Healthcare Org Name","url":"http://successurl/Binary?documentId=228869&repositoryId=2.16.840.1.113883.3.2054.2.1&homeCommunityId=2.16.840.1.113883.3.2054.2.1","contentType":"text/xml","providerName":"Dr1 Dr1Lname","encounterDate":"2020-12-10T10:34:49.273476","data":null},{"id":"1005","title":"Humira 9_23 Travel","status":"Relevant Document Retrieval Success","type":"Encounter Summary","typeCode":"34133-9","orgName":"Humira Healthcare Org Name","url":"http://successurl/Binary?documentId=248757&repositoryId=2.16.840.1.113883.3.2054.2.1&homeCommunityId=2.16.840.1.113883.3.2054.2.1","contentType":"text/xml","providerName":"Dr1 Dr1Lname","encounterDate":"2020-12-10T10:34:49.273458","data":null},{"id":"1004","title":"Humira 9_23 telephone","status":"Relevant Document Retrieval Success","type":"Encounter Summary","typeCode":"34133-9","orgName":"Humira Healthcare Org Name","url":"http://successurl/Binary?documentId=189339&repositoryId=2.16.840.1.113883.3.2054.2.1&homeCommunityId=2.16.840.1.113883.3.2054.2.1","contentType":"text/xml","providerName":"Dr1 Dr1Lname","encounterDate":"2020-12-10T10:34:49.273438","data":null},{"id":"1003","title":"Humira 9_15 telephone","status":"Relevant Document Retrieval Success","type":"Encounter Summary","typeCode":"34133-9","orgName":"Humira Healthcare Org Name","url":"http://successurl/Binary?documentId=110990&repositoryId=2.16.840.1.113883.3.2054.2.1&homeCommunityId=2.16.840.1.113883.3.2054.2.1","contentType":"text/xml","providerName":"Dr1 Dr1Lname","encounterDate":"2020-12-10T10:34:49.273416","data":null},{"id":"1002","title":"Humira 9_9 Hospital encounter","status":"Relevant Document Retrieval Success","type":"Encounter Summary","typeCode":"34133-9","orgName":"Humira Healthcare Org Name","url":"http://successurl/Binary?documentId=11111148790&repositoryId=2.16.840.1.113883.3.2054.2.1&homeCommunityId=2.16.840.1.113883.3.2054.2.1","contentType":"text/xml","providerName":"Dr1 Dr1Lname","encounterDate":"2020-12-10T10:34:49.273383","data":null}]}],"statusDesc":"Success","statusCode":"0000","requestedBy":"9326570"}}]]></con:responseContent><con:header><con:name>Access-Control-Allow-Origin</con:name><con:value>*</con:value></con:header><con:header><con:name>Access-Control-Allow-Methods</con:name><con:value>POST, GET, OPTIONS, DELETE</con:value></con:header><con:header><con:name>Access-Control-Allow-Headers</con:name><con:value>x-requested-with, Content-type, x-correlationid, verification-token, appname </con:value></con:header></con:response></con:restMockAction><con:restMockAction name="specialtyexpedite/dl/patient" method="OPTIONS" resourcePath="/specialtyexpedite/dl/patient" id="e09f8cb8-167f-4c6c-b963-785c6c8c198f"><con:settings/><con:defaultResponse>Response 2</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 2" id="4e2c06e7-0b4f-4b18-9403-480029b66c6c" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent/><con:header><con:name>Access-Control-Allow-Origin</con:name><con:value>*</con:value></con:header><con:header><con:name>Access-Control-Allow-Methods</con:name><con:value>POST, GET, OPTIONS, DELETE</con:value></con:header><con:header><con:name>Access-Control-Allow-Headers</con:name><con:value>x-requested-with, Content-type, x-correlationid, verification-token, appname </con:value></con:header></con:response></con:restMockAction><con:restMockAction name="specialtyexpedite/textsearch/search" method="POST" resourcePath="/specialtyexpedite/textsearch/search" id="d7663d29-ef9e-4905-b6a7-e4abfd1be059"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*&#13;
// Script dispatcher is used to select a response based on the incoming request.&#13;
// Here are few examples showing how to match based on path, query param, header and body&#13;
&#13;
// Match based on path&#13;
def requestPath = mockRequest.getPath()&#13;
log.info "Path: "+ requestPath&#13;
&#13;
if( requestPath.contains("json") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "JSON Response"&#13;
}&#13;
&#13;
&#13;
// Match based on query parameter&#13;
def queryString = mockRequest.getRequest().getQueryString()&#13;
log.info "QueryString: " + queryString&#13;
&#13;
if( queryString.contains("stockholm") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response Stockholm"&#13;
}&#13;
else if( queryString.contains("london") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response London"&#13;
}&#13;
&#13;
&#13;
// Match based on header&#13;
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")&#13;
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList&#13;
&#13;
if( acceptEncodingHeaderList.contains("gzip,deflate") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "GZiped Response"&#13;
}&#13;
&#13;
&#13;
// Match based on body&#13;
def requestBody = mockRequest.getRequestContent()&#13;
log.info "Request body: " + requestBody&#13;
&#13;
if( requestBody.contains("some data") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response N"&#13;
}&#13;
*/&#13;
</con:dispatchPath><con:response name="Response 1" id="86105e14-342f-4059-b86e-7199aeb44db8" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
    "response": {
        "resources": null,
        "statusDesc": "Invalid search expression",
        "statusCode": "7029",
        "errorSystem": "CCDService"
    }
}</con:responseContent><con:header><con:name>Access-Control-Allow-Origin</con:name><con:value>*</con:value></con:header><con:header><con:name>Access-Control-Allow-Methods</con:name><con:value>POST, GET, OPTIONS, DELETE</con:value></con:header><con:header><con:name>Access-Control-Allow-Headers</con:name><con:value>x-requested-with, Content-type, x-correlationid, verification-token, appname </con:value></con:header></con:response></con:restMockAction><con:restMockAction name="specialtyexpedite/textsearch/search" method="OPTIONS" resourcePath="/specialtyexpedite/textsearch/search" id="f20a186e-8012-40b2-b199-eaf1a3ffe4df"><con:settings/><con:defaultResponse>Response 2</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*&#13;
// Script dispatcher is used to select a response based on the incoming request.&#13;
// Here are few examples showing how to match based on path, query param, header and body&#13;
&#13;
// Match based on path&#13;
def requestPath = mockRequest.getPath()&#13;
log.info "Path: "+ requestPath&#13;
&#13;
if( requestPath.contains("json") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "JSON Response"&#13;
}&#13;
&#13;
&#13;
// Match based on query parameter&#13;
def queryString = mockRequest.getRequest().getQueryString()&#13;
log.info "QueryString: " + queryString&#13;
&#13;
if( queryString.contains("stockholm") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response Stockholm"&#13;
}&#13;
else if( queryString.contains("london") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response London"&#13;
}&#13;
&#13;
&#13;
// Match based on header&#13;
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")&#13;
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList&#13;
&#13;
if( acceptEncodingHeaderList.contains("gzip,deflate") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "GZiped Response"&#13;
}&#13;
&#13;
&#13;
// Match based on body&#13;
def requestBody = mockRequest.getRequestContent()&#13;
log.info "Request body: " + requestBody&#13;
&#13;
if( requestBody.contains("some data") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response N"&#13;
}&#13;
*/&#13;
</con:dispatchPath><con:response name="Response 2" id="c26c5c8b-79c9-400f-a412-c551de43baeb" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent/><con:header><con:name>Access-Control-Allow-Origin</con:name><con:value>*</con:value></con:header><con:header><con:name>Access-Control-Allow-Methods</con:name><con:value>POST, GET, OPTIONS, DELETE</con:value></con:header><con:header><con:name>Access-Control-Allow-Headers</con:name><con:value>x-requested-with, Content-type, x-correlationid, verification-token, appname </con:value></con:header></con:response></con:restMockAction><con:restMockAction name="specialtyexpedite/ql/document/retrieve" method="POST" resourcePath="/specialtyexpedite/ql/document/retrieve" id="36081419-be2a-4250-bdbd-3163e91f6c4b"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*&#13;
// Script dispatcher is used to select a response based on the incoming request.&#13;
// Here are few examples showing how to match based on path, query param, header and body&#13;
&#13;
// Match based on path&#13;
def requestPath = mockRequest.getPath()&#13;
log.info "Path: "+ requestPath&#13;
&#13;
if( requestPath.contains("json") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "JSON Response"&#13;
}&#13;
&#13;
&#13;
// Match based on query parameter&#13;
def queryString = mockRequest.getRequest().getQueryString()&#13;
log.info "QueryString: " + queryString&#13;
&#13;
if( queryString.contains("stockholm") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response Stockholm"&#13;
}&#13;
else if( queryString.contains("london") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response London"&#13;
}&#13;
&#13;
&#13;
// Match based on header&#13;
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")&#13;
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList&#13;
&#13;
if( acceptEncodingHeaderList.contains("gzip,deflate") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "GZiped Response"&#13;
}&#13;
&#13;
&#13;
// Match based on body&#13;
def requestBody = mockRequest.getRequestContent()&#13;
log.info "Request body: " + requestBody&#13;
&#13;
if( requestBody.contains("some data") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response N"&#13;
}&#13;
*/&#13;
</con:dispatchPath><con:response name="Response 1" id="42333f19-b7ba-43e8-aab6-88f27476c0ad" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{"response":{"resources":[{"id":"462","content":""}],"statusDesc":"Success","statusCode":"0000","requestedBy":"9308198"}}</con:responseContent><con:header><con:name>Access-Control-Allow-Origin</con:name><con:value>*</con:value></con:header><con:header><con:name>Access-Control-Allow-Methods</con:name><con:value>POST, GET, OPTIONS, DELETE</con:value></con:header><con:header><con:name>Access-Control-Allow-Headers</con:name><con:value>x-requested-with, Content-type, x-correlationid, verification-token, appname </con:value></con:header></con:response></con:restMockAction><con:restMockAction name="specialtyexpedite/ql/document/retrieve" method="OPTIONS" resourcePath="/specialtyexpedite/ql/document/retrieve" id="a1e61022-d1e4-4247-8c4e-eabb5f7daf67"><con:settings/><con:defaultResponse>Response 2</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*&#13;
// Script dispatcher is used to select a response based on the incoming request.&#13;
// Here are few examples showing how to match based on path, query param, header and body&#13;
&#13;
// Match based on path&#13;
def requestPath = mockRequest.getPath()&#13;
log.info "Path: "+ requestPath&#13;
&#13;
if( requestPath.contains("json") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "JSON Response"&#13;
}&#13;
&#13;
&#13;
// Match based on query parameter&#13;
def queryString = mockRequest.getRequest().getQueryString()&#13;
log.info "QueryString: " + queryString&#13;
&#13;
if( queryString.contains("stockholm") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response Stockholm"&#13;
}&#13;
else if( queryString.contains("london") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response London"&#13;
}&#13;
&#13;
&#13;
// Match based on header&#13;
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")&#13;
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList&#13;
&#13;
if( acceptEncodingHeaderList.contains("gzip,deflate") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "GZiped Response"&#13;
}&#13;
&#13;
&#13;
// Match based on body&#13;
def requestBody = mockRequest.getRequestContent()&#13;
log.info "Request body: " + requestBody&#13;
&#13;
if( requestBody.contains("some data") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response N"&#13;
}&#13;
*/&#13;
</con:dispatchPath><con:response name="Response 2" id="93adb849-f12f-4b79-a23c-d0caf04dbe10" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent/><con:header><con:name>Access-Control-Allow-Origin</con:name><con:value>*</con:value></con:header><con:header><con:name>Access-Control-Allow-Methods</con:name><con:value>POST, GET, OPTIONS, DELETE</con:value></con:header><con:header><con:name>Access-Control-Allow-Headers</con:name><con:value>x-requested-with, Content-type, x-correlationid, verification-token, appname </con:value></con:header></con:response></con:restMockAction><con:restMockAction name="specialtyexpedite/documents/retrieve" method="POST" resourcePath="/specialtyexpedite/documents/retrieve" id="06396d43-5e69-4af9-b7ec-1128a6021970"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*&#13;
// Script dispatcher is used to select a response based on the incoming request.&#13;
// Here are few examples showing how to match based on path, query param, header and body&#13;
&#13;
// Match based on path&#13;
def requestPath = mockRequest.getPath()&#13;
log.info "Path: "+ requestPath&#13;
&#13;
if( requestPath.contains("json") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "JSON Response"&#13;
}&#13;
&#13;
&#13;
// Match based on query parameter&#13;
def queryString = mockRequest.getRequest().getQueryString()&#13;
log.info "QueryString: " + queryString&#13;
&#13;
if( queryString.contains("stockholm") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response Stockholm"&#13;
}&#13;
else if( queryString.contains("london") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response London"&#13;
}&#13;
&#13;
&#13;
// Match based on header&#13;
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")&#13;
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList&#13;
&#13;
if( acceptEncodingHeaderList.contains("gzip,deflate") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "GZiped Response"&#13;
}&#13;
&#13;
&#13;
// Match based on body&#13;
def requestBody = mockRequest.getRequestContent()&#13;
log.info "Request body: " + requestBody&#13;
&#13;
if( requestBody.contains("some data") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response N"&#13;
}&#13;
*/&#13;
</con:dispatchPath><con:response name="Response 1" id="a474db8f-af75-46ba-afe2-cc7c0f409d0f" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
    "response": {
        "resources": [
            {
                "id": "461",
                "content": ""
            }
        ],
        "statusDesc": "Success",
        "statusCode": "0000",
        "requestedBy": "9678003"
    }
}</con:responseContent><con:header><con:name>Access-Control-Allow-Origin</con:name><con:value>*</con:value></con:header><con:header><con:name>Access-Control-Allow-Methods</con:name><con:value>POST, GET, OPTIONS, DELETE</con:value></con:header><con:header><con:name>Access-Control-Allow-Headers</con:name><con:value>x-requested-with, Content-type, x-correlationid, verification-token, appname </con:value></con:header></con:response></con:restMockAction><con:restMockAction name="specialtyexpedite/documents/retrieve" method="OPTIONS" resourcePath="/specialtyexpedite/documents/retrieve" id="6a8edbfb-add2-443a-8bf1-4e5618240477"><con:settings/><con:defaultResponse>Response 2</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*&#13;
// Script dispatcher is used to select a response based on the incoming request.&#13;
// Here are few examples showing how to match based on path, query param, header and body&#13;
&#13;
// Match based on path&#13;
def requestPath = mockRequest.getPath()&#13;
log.info "Path: "+ requestPath&#13;
&#13;
if( requestPath.contains("json") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "JSON Response"&#13;
}&#13;
&#13;
&#13;
// Match based on query parameter&#13;
def queryString = mockRequest.getRequest().getQueryString()&#13;
log.info "QueryString: " + queryString&#13;
&#13;
if( queryString.contains("stockholm") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response Stockholm"&#13;
}&#13;
else if( queryString.contains("london") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response London"&#13;
}&#13;
&#13;
&#13;
// Match based on header&#13;
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")&#13;
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList&#13;
&#13;
if( acceptEncodingHeaderList.contains("gzip,deflate") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "GZiped Response"&#13;
}&#13;
&#13;
&#13;
// Match based on body&#13;
def requestBody = mockRequest.getRequestContent()&#13;
log.info "Request body: " + requestBody&#13;
&#13;
if( requestBody.contains("some data") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response N"&#13;
}&#13;
*/&#13;
</con:dispatchPath><con:response name="Response 2" id="348dbb82-a4cd-4510-bc8d-292cd7393778" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent/><con:header><con:name>Access-Control-Allow-Origin</con:name><con:value>*</con:value></con:header><con:header><con:name>Access-Control-Allow-Methods</con:name><con:value>POST, GET, OPTIONS, DELETE</con:value></con:header><con:header><con:name>Access-Control-Allow-Headers</con:name><con:value>x-requested-with, Content-type, x-correlationid, verification-token, appname </con:value></con:header></con:response></con:restMockAction><con:restMockAction name="specialtyexpedite/patient/documents" method="POST" resourcePath="/specialtyexpedite/patient/documents" id="0effcf54-a315-4b69-81dc-1f8faf4e5dbc"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*&#13;
// Script dispatcher is used to select a response based on the incoming request.&#13;
// Here are few examples showing how to match based on path, query param, header and body&#13;
&#13;
// Match based on path&#13;
def requestPath = mockRequest.getPath()&#13;
log.info "Path: "+ requestPath&#13;
&#13;
if( requestPath.contains("json") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "JSON Response"&#13;
}&#13;
&#13;
&#13;
// Match based on query parameter&#13;
def queryString = mockRequest.getRequest().getQueryString()&#13;
log.info "QueryString: " + queryString&#13;
&#13;
if( queryString.contains("stockholm") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response Stockholm"&#13;
}&#13;
else if( queryString.contains("london") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response London"&#13;
}&#13;
&#13;
&#13;
// Match based on header&#13;
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")&#13;
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList&#13;
&#13;
if( acceptEncodingHeaderList.contains("gzip,deflate") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "GZiped Response"&#13;
}&#13;
&#13;
&#13;
// Match based on body&#13;
def requestBody = mockRequest.getRequestContent()&#13;
log.info "Request body: " + requestBody&#13;
&#13;
if( requestBody.contains("some data") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response N"&#13;
}&#13;
*/&#13;
</con:dispatchPath><con:response name="Response 1" id="07175e9e-4aac-42df-9737-1d2bb730d99b" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{"response":{"resources":[{"id":"1234","gender":null,"dateOfBirth":"1935-08-04","phNumber":null,"surescriptsId":"10005505061","assigningAuthority":"2.16.840.1.113883.3.2054.2.1","name":{"firstName":"ARTHUR","lastName":"CURRY","middleName":null,"prefix":null,"suffix":null},"address":null,"prescriber":null,"docRefs":[{"id":"2.16.840.1.113883.3.2054.2.1.10025263441","title":"Surescripts Location Summary","status":"current","createdDate":"2022-03-21T20:11:28+00:00","type":"Location Summary","typeCode":"34133-9","orgName":"Surescripts","url":"/Binary?documentId=2.16.840.1.113883.3.2054.2.1.10025263441&amp;repositoryId=2.16.840.1.113883.3.2054.2.1&amp;homeCommunityId=2.16.840.1.113883.3.2054.2.1","contentType":"text/xml","data":null}]}],"statusDesc":"Success","statusCode":"0000","requestedBy":"9308198"}}</con:responseContent><con:header><con:name>Access-Control-Allow-Origin</con:name><con:value>*</con:value></con:header><con:header><con:name>Access-Control-Allow-Methods</con:name><con:value>POST, GET, OPTIONS, DELETE</con:value></con:header><con:header><con:name>Access-Control-Allow-Headers</con:name><con:value>x-requested-with, Content-type, x-correlationid, verification-token, appname </con:value></con:header></con:response></con:restMockAction><con:restMockAction name="specialtyexpedite/patient/documents" method="OPTIONS" resourcePath="/specialtyexpedite/patient/documents" id="c6a6dbcd-0336-41d3-b311-ca9d84ad76db"><con:settings/><con:defaultResponse>Response 2</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*&#13;
// Script dispatcher is used to select a response based on the incoming request.&#13;
// Here are few examples showing how to match based on path, query param, header and body&#13;
&#13;
// Match based on path&#13;
def requestPath = mockRequest.getPath()&#13;
log.info "Path: "+ requestPath&#13;
&#13;
if( requestPath.contains("json") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "JSON Response"&#13;
}&#13;
&#13;
&#13;
// Match based on query parameter&#13;
def queryString = mockRequest.getRequest().getQueryString()&#13;
log.info "QueryString: " + queryString&#13;
&#13;
if( queryString.contains("stockholm") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response Stockholm"&#13;
}&#13;
else if( queryString.contains("london") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response London"&#13;
}&#13;
&#13;
&#13;
// Match based on header&#13;
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")&#13;
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList&#13;
&#13;
if( acceptEncodingHeaderList.contains("gzip,deflate") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "GZiped Response"&#13;
}&#13;
&#13;
&#13;
// Match based on body&#13;
def requestBody = mockRequest.getRequestContent()&#13;
log.info "Request body: " + requestBody&#13;
&#13;
if( requestBody.contains("some data") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response N"&#13;
}&#13;
*/&#13;
</con:dispatchPath><con:response name="Response 2" id="c0888522-8c2d-4772-8613-b36751c3081f" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent/><con:header><con:name>Access-Control-Allow-Origin</con:name><con:value>*</con:value></con:header><con:header><con:name>Access-Control-Allow-Methods</con:name><con:value>POST, GET, OPTIONS, DELETE</con:value></con:header><con:header><con:name>Access-Control-Allow-Headers</con:name><con:value/></con:header></con:response></con:restMockAction><con:restMockAction name="specialtyexpedite/patient/" method="POST" resourcePath="/specialtyexpedite/patient/" id="e1384331-1106-4f89-b4ff-5304ab664100"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*&#13;
// Script dispatcher is used to select a response based on the incoming request.&#13;
// Here are few examples showing how to match based on path, query param, header and body&#13;
&#13;
// Match based on path&#13;
def requestPath = mockRequest.getPath()&#13;
log.info "Path: "+ requestPath&#13;
&#13;
if( requestPath.contains("json") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "JSON Response"&#13;
}&#13;
&#13;
&#13;
// Match based on query parameter&#13;
def queryString = mockRequest.getRequest().getQueryString()&#13;
log.info "QueryString: " + queryString&#13;
&#13;
if( queryString.contains("stockholm") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response Stockholm"&#13;
}&#13;
else if( queryString.contains("london") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response London"&#13;
}&#13;
&#13;
&#13;
// Match based on header&#13;
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")&#13;
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList&#13;
&#13;
if( acceptEncodingHeaderList.contains("gzip,deflate") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "GZiped Response"&#13;
}&#13;
&#13;
&#13;
// Match based on body&#13;
def requestBody = mockRequest.getRequestContent()&#13;
log.info "Request body: " + requestBody&#13;
&#13;
if( requestBody.contains("some data") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response N"&#13;
}&#13;
*/&#13;
</con:dispatchPath><con:response name="Response 1" id="6b255382-9a1a-4628-9913-2f1ba2079422" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{"response":{"resources":[{"id":"1234","gender":"male","dateOfBirth":"1935-08-04","phNumber":null,"surescriptsId":"10005505061","assigningAuthority":"2.16.840.1.113883.3.2054.2.1","name":{"firstName":"ARTHUR","lastName":"CURRY","middleName":"M","prefix":null,"suffix":null},"address":{"addressLine1":"100 ROY HILL RD","addressLine2":null,"city":"CHEBEAGUE IS","state":"ME","zipCode":"04017"},"prescriber":null,"docRefs":null}],"statusDesc":"Success","statusCode":"0000","requestedBy":"9308198"}}</con:responseContent><con:header><con:name>Access-Control-Allow-Origin</con:name><con:value>*</con:value></con:header><con:header><con:name>Access-Control-Allow-Methods</con:name><con:value>POST, GET, OPTIONS, DELETE</con:value></con:header><con:header><con:name>Access-Control-Allow-Headers</con:name><con:value>x-requested-with, Content-type, x-correlationid, verification-token, appname </con:value></con:header></con:response></con:restMockAction><con:restMockAction name="specialtyexpedite/patient" method="OPTIONS" resourcePath="/specialtyexpedite/patient" id="d8877ca1-b2fd-4e28-b7d9-7cee35874c1c"><con:settings/><con:defaultResponse>Response 2</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*&#13;
// Script dispatcher is used to select a response based on the incoming request.&#13;
// Here are few examples showing how to match based on path, query param, header and body&#13;
&#13;
// Match based on path&#13;
def requestPath = mockRequest.getPath()&#13;
log.info "Path: "+ requestPath&#13;
&#13;
if( requestPath.contains("json") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "JSON Response"&#13;
}&#13;
&#13;
&#13;
// Match based on query parameter&#13;
def queryString = mockRequest.getRequest().getQueryString()&#13;
log.info "QueryString: " + queryString&#13;
&#13;
if( queryString.contains("stockholm") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response Stockholm"&#13;
}&#13;
else if( queryString.contains("london") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response London"&#13;
}&#13;
&#13;
&#13;
// Match based on header&#13;
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")&#13;
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList&#13;
&#13;
if( acceptEncodingHeaderList.contains("gzip,deflate") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "GZiped Response"&#13;
}&#13;
&#13;
&#13;
// Match based on body&#13;
def requestBody = mockRequest.getRequestContent()&#13;
log.info "Request body: " + requestBody&#13;
&#13;
if( requestBody.contains("some data") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response N"&#13;
}&#13;
*/&#13;
</con:dispatchPath><con:response name="Response 2" id="79f9b096-2362-40a8-8ee7-bc415a45e3f7" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent/><con:header><con:name>Access-Control-Allow-Origin</con:name><con:value>*</con:value></con:header><con:header><con:name>Access-Control-Allow-Methods</con:name><con:value>POST, GET, OPTIONS, DELETE</con:value></con:header><con:header><con:name>Access-Control-Allow-Headers</con:name><con:value>x-requested-with, Content-type, x-correlationid, verification-token, appname </con:value></con:header></con:response></con:restMockAction><con:restMockAction name="specialtyexpedite/patient/documentList" method="OPTIONS" resourcePath="/specialtyexpedite/patient/documentList" id="fff27aaf-93d6-470e-a137-8f0c133da0a9"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*&#13;
// Script dispatcher is used to select a response based on the incoming request.&#13;
// Here are few examples showing how to match based on path, query param, header and body&#13;
&#13;
// Match based on path&#13;
def requestPath = mockRequest.getPath()&#13;
log.info "Path: "+ requestPath&#13;
&#13;
if( requestPath.contains("json") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "JSON Response"&#13;
}&#13;
&#13;
&#13;
// Match based on query parameter&#13;
def queryString = mockRequest.getRequest().getQueryString()&#13;
log.info "QueryString: " + queryString&#13;
&#13;
if( queryString.contains("stockholm") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response Stockholm"&#13;
}&#13;
else if( queryString.contains("london") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response London"&#13;
}&#13;
&#13;
&#13;
// Match based on header&#13;
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")&#13;
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList&#13;
&#13;
if( acceptEncodingHeaderList.contains("gzip,deflate") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "GZiped Response"&#13;
}&#13;
&#13;
&#13;
// Match based on body&#13;
def requestBody = mockRequest.getRequestContent()&#13;
log.info "Request body: " + requestBody&#13;
&#13;
if( requestBody.contains("some data") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response N"&#13;
}&#13;
*/&#13;
</con:dispatchPath><con:response name="Response 1" id="971c1e71-45e3-4917-957d-1dce8d9ec115" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent/><con:header><con:name>Access-Control-Allow-Origin</con:name><con:value>*</con:value></con:header><con:header><con:name>Access-Control-Allow-Methods</con:name><con:value>POST, GET, OPTIONS, DELETE</con:value></con:header><con:header><con:name>Access-Control-Allow-Headers</con:name><con:value>x-requested-with, Content-type, x-correlationid, verification-token, appname </con:value></con:header></con:response></con:restMockAction><con:restMockAction name="specialtyexpedite/patient/documentList" method="POST" resourcePath="/specialtyexpedite/patient/documentList" id="ea935511-4058-431c-84c5-2e1eac355c5a"><con:settings/><con:defaultResponse>Response 2</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*&#13;
// Script dispatcher is used to select a response based on the incoming request.&#13;
// Here are few examples showing how to match based on path, query param, header and body&#13;
&#13;
// Match based on path&#13;
def requestPath = mockRequest.getPath()&#13;
log.info "Path: "+ requestPath&#13;
&#13;
if( requestPath.contains("json") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "JSON Response"&#13;
}&#13;
&#13;
&#13;
// Match based on query parameter&#13;
def queryString = mockRequest.getRequest().getQueryString()&#13;
log.info "QueryString: " + queryString&#13;
&#13;
if( queryString.contains("stockholm") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response Stockholm"&#13;
}&#13;
else if( queryString.contains("london") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response London"&#13;
}&#13;
&#13;
&#13;
// Match based on header&#13;
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")&#13;
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList&#13;
&#13;
if( acceptEncodingHeaderList.contains("gzip,deflate") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "GZiped Response"&#13;
}&#13;
&#13;
&#13;
// Match based on body&#13;
def requestBody = mockRequest.getRequestContent()&#13;
log.info "Request body: " + requestBody&#13;
&#13;
if( requestBody.contains("some data") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response N"&#13;
}&#13;
*/&#13;
</con:dispatchPath><con:response name="Response 2" id="f74e10c3-0c66-42a2-ace7-a9884fa05032" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
    "response": {
        "resources": [
            {
                "id": "PatFrankie",
                "requestId": "ID-gxt4-qb61-q3il-qs7e",
                "gender": "male",
                "dateOfBirth": "1976-11-15",
                "phNumber": null,
                "surescriptsId": null,
                "assigningAuthority": null,
                "name": {
                    "firstName": "Frankie",
                    "lastName": "everyman",
                    "middleName": null,
                    "prefix": null,
                    "suffix": null
                },
                "address": {
                    "addressLine1": "111 Dorrance St",
                    "addressLine2": null,
                    "city": "Providence",
                    "state": "RI",
                    "zipCode": "02903"
                },
                "prescriber": {
                    "npi": "",
                    "firstName": null,
                    "lastName": null,
                    "zipCode": null
                },
                "docRefs": [
                    {
                        "id": "47161-66213,81507.580498",
                        "orgName": "2.16.840.1.113883.3.5958",
                        "url": "/document?repositoryId=2.16.840.1.113883.19.5.10&amp;homeCommunityId=2.16.840.1.113883.3.5958&amp;documentId=47161-66213,81507.580498",
                        "contentType": "text/xml",
                        "data": null,
                        "sourceType": "IRIS",
                        "orgId": "2.16.840.1.113883.3.5958"
                    }
                ],
                "docFilters": null,
                "identifiers": null
            }
        ],
        "statusDesc": "Success",
        "statusCode": "0000",
        "requestedBy": "divya"
    }
}</con:responseContent><con:header><con:name>Access-Control-Allow-Origin</con:name><con:value>*</con:value></con:header><con:header><con:name>Access-Control-Allow-Methods</con:name><con:value>POST, GET, OPTIONS, DELETE</con:value></con:header><con:header><con:name>Access-Control-Allow-Headers</con:name><con:value>x-requested-with, Content-type, x-correlationid, verification-token, appname </con:value></con:header></con:response></con:restMockAction><con:restMockAction name="patientSummary/medicationList" method="OPTIONS" resourcePath="/patientSummary/medicationList" id="aa040da4-3b44-43d3-8ec9-2e9f20e655b9"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*&#13;
// Script dispatcher is used to select a response based on the incoming request.&#13;
// Here are few examples showing how to match based on path, query param, header and body&#13;
&#13;
// Match based on path&#13;
def requestPath = mockRequest.getPath()&#13;
log.info "Path: "+ requestPath&#13;
&#13;
if( requestPath.contains("json") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "JSON Response"&#13;
}&#13;
&#13;
&#13;
// Match based on query parameter&#13;
def queryString = mockRequest.getRequest().getQueryString()&#13;
log.info "QueryString: " + queryString&#13;
&#13;
if( queryString.contains("stockholm") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response Stockholm"&#13;
}&#13;
else if( queryString.contains("london") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response London"&#13;
}&#13;
&#13;
&#13;
// Match based on header&#13;
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")&#13;
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList&#13;
&#13;
if( acceptEncodingHeaderList.contains("gzip,deflate") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "GZiped Response"&#13;
}&#13;
&#13;
&#13;
// Match based on body&#13;
def requestBody = mockRequest.getRequestContent()&#13;
log.info "Request body: " + requestBody&#13;
&#13;
if( requestBody.contains("some data") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response N"&#13;
}&#13;
*/&#13;
</con:dispatchPath><con:response name="Response 1" id="8d8b16e1-5330-4191-81ec-47e889014bc6" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent/><con:header><con:name>Access-Control-Allow-Origin</con:name><con:value>*</con:value></con:header><con:header><con:name>Access-Control-Allow-Methods</con:name><con:value>POST, GET, OPTIONS, DELETE</con:value></con:header><con:header><con:name>Access-Control-Allow-Headers</con:name><con:value>x-requested-with, Content-type, x-correlationid, verification-token, appname </con:value></con:header></con:response></con:restMockAction><con:restMockAction name="patientSummary/medicationList" method="POST" resourcePath="/patientSummary/medicationList" id="84746731-27d5-4b32-8c7f-403d540797b7"><con:settings/><con:defaultResponse xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*&#13;
// Script dispatcher is used to select a response based on the incoming request.&#13;
// Here are few examples showing how to match based on path, query param, header and body&#13;
&#13;
// Match based on path&#13;
def requestPath = mockRequest.getPath()&#13;
log.info "Path: "+ requestPath&#13;
&#13;
if( requestPath.contains("json") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "JSON Response"&#13;
}&#13;
&#13;
&#13;
// Match based on query parameter&#13;
def queryString = mockRequest.getRequest().getQueryString()&#13;
log.info "QueryString: " + queryString&#13;
&#13;
if( queryString.contains("stockholm") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response Stockholm"&#13;
}&#13;
else if( queryString.contains("london") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response London"&#13;
}&#13;
&#13;
&#13;
// Match based on header&#13;
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")&#13;
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList&#13;
&#13;
if( acceptEncodingHeaderList.contains("gzip,deflate") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "GZiped Response"&#13;
}&#13;
&#13;
&#13;
// Match based on body&#13;
def requestBody = mockRequest.getRequestContent()&#13;
log.info "Request body: " + requestBody&#13;
&#13;
if( requestBody.contains("some data") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response N"&#13;
}&#13;
*/&#13;
</con:dispatchPath><con:response name="Response 2" id="2983d374-9b9a-4ff5-b3ae-e8dddc22c392" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
    "resourceType": "Bundle",
    "type": "searchset",
    "total": 30,
    "link": [
        {
            "relation": "search",
            "url": "https://healthcare.googleapis.com/v1/projects/edp-qa-storage/locations/us/datasets/edp_ent_cdr_ods_qa_ds/fhirStores/edp_ent_cdr_fhir_ods_qa/fhir/MedicationRequest/?patient.identifier=urn%3ASpecialty-Pharmacy%7CSPRxU6rRZ1zZn&amp;status=active"
        },
        {
            "relation": "first",
            "url": "https://healthcare.googleapis.com/v1/projects/edp-qa-storage/locations/us/datasets/edp_ent_cdr_ods_qa_ds/fhirStores/edp_ent_cdr_fhir_ods_qa/fhir/MedicationRequest/?patient.identifier=urn%3ASpecialty-Pharmacy%7CSPRxU6rRZ1zZn&amp;status=active"
        },
        {
            "relation": "self",
            "url": "https://healthcare.googleapis.com/v1/projects/edp-qa-storage/locations/us/datasets/edp_ent_cdr_ods_qa_ds/fhirStores/edp_ent_cdr_fhir_ods_qa/fhir/MedicationRequest/?patient.identifier=urn%3ASpecialty-Pharmacy%7CSPRxU6rRZ1zZn&amp;status=active"
        }
    ],
    "entry": [
        {
            "fullUrl": "https://healthcare.googleapis.com/v1/projects/edp-qa-storage/locations/us/datasets/edp_ent_cdr_ods_qa_ds/fhirStores/edp_ent_cdr_fhir_ods_qa/fhir/MedicationRequest/6bc3cc80cb33c067fa26092e5fc544b0",
            "resource": {
                "resourceType": "MedicationRequest",
                "id": "6bc3cc80cb33c067fa26092e5fc544b0",
                "meta": {
                    "versionId": "MTY0NTY1NzQ1MjczMTMzMzAwMA",
                    "lastUpdated": "2022-02-23T23:04:12.731333+00:00",
                    "source": "gs://usmedpent-eds-qalan-cq/inbound/test/test_0223_ra/SPCLTY_PROVIDER.TCIA_CLNC_DOC.del.028.lob.Deid.xml.utf8.cqi.json",
                    "tag": [
                        {
                            "code": "CQ-CCDA"
                        }
                    ]
                },
                "identifier": [
                    {
                        "type": {
                            "coding": [
                                {
                                    "system": "urn:CQ-CCDA",
                                    "code": "CQ_CCDA",
                                    "display": "CQ CCDA"
                                }
                            ]
                        },
                        "system": "urn:CQ-CCDA",
                        "value": "0cf9ea28-65c9-43b1-8395-0d7ec6e12aeb"
                    }
                ],
                "status": "active",
                "intent": "plan",
                "medicationCodeableConcept": {
                    "coding": [
                        {
                            "system": "http://www.nlm.nih.gov/research/umls/rxnorm",
                            "code": "896245",
                            "display": "Content Value with ID"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.69",
                            "code": "00173071620",
                            "display": "fluticasone propion/salmeterol"
                        }
                    ],
                    "text": "Content Value with ID"
                },
                "subject": {
                    "reference": "Patient/607d1a67513568a2dbacc6f1d2e2cd30",
                    "type": "Patient"
                },
                "requester": {
                    "reference": "Practitioner/591e787882e6a4d8061ac0e43c432f70",
                    "type": "Practitioner",
                    "display": "wUeZW7xykF4awP/zfRyKrxZRTZCadn8xdmYx1qQptPw= SdC5cHCo1PCR87TsuqOb1mptJc9NODhuK6o2NiA7z7s="
                },
                "performer": {
                    "reference": "Organization/f8bd0d498327f60790f78698823f4141",
                    "type": "Organization"
                },
                "dosageInstruction": [
                    {
                        "text": "Content Value with ID",
                        "patientInstruction": "Content Value with ID",
                        "timing": {
                            "repeat": {
                                "frequency": 1,
                                "period": 12,
                                "periodUnit": "h"
                            }
                        },
                        "route": {
                            "coding": [
                                {
                                    "system": "http://snomed.info/sct",
                                    "code": "C38216",
                                    "display": "RESPIRATORY (INHALATION)"
                                }
                            ]
                        },
                        "doseAndRate": [
                            {
                                "doseQuantity": {
                                    "value": 1,
                                    "unit": "{puff}",
                                    "system": "http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm"
                                }
                            }
                        ]
                    }
                ]
            },
            "search": {
                "mode": "match"
            }
        },
        {
            "fullUrl": "https://healthcare.googleapis.com/v1/projects/edp-qa-storage/locations/us/datasets/edp_ent_cdr_ods_qa_ds/fhirStores/edp_ent_cdr_fhir_ods_qa/fhir/MedicationRequest/343cc39c41a64ac87070aa5ffc5803f5",
            "resource": {
                "resourceType": "MedicationRequest",
                "id": "343cc39c41a64ac87070aa5ffc5803f5",
                "meta": {
                    "versionId": "MTY0NTY1NzQ1MjczMTMzMzAwMA",
                    "lastUpdated": "2022-02-23T23:04:12.731333+00:00",
                    "source": "gs://usmedpent-eds-qalan-cq/inbound/test/test_0223_ra/SPCLTY_PROVIDER.TCIA_CLNC_DOC.del.028.lob.Deid.xml.utf8.cqi.json",
                    "tag": [
                        {
                            "code": "CQ-CCDA"
                        }
                    ]
                },
                "identifier": [
                    {
                        "type": {
                            "coding": [
                                {
                                    "system": "urn:CQ-CCDA",
                                    "code": "CQ_CCDA",
                                    "display": "CQ CCDA"
                                }
                            ]
                        },
                        "system": "urn:CQ-CCDA",
                        "value": "2bf090ca-8b8a-4c3c-a47e-af01cdec203b"
                    }
                ],
                "status": "active",
                "intent": "plan",
                "medicationCodeableConcept": {
                    "coding": [
                        {
                            "system": "http://www.nlm.nih.gov/research/umls/rxnorm",
                            "code": "153892",
                            "display": "Content Value with ID"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.88",
                            "code": "200224",
                            "display": "montelukast 10 MG Oral Tablet"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.69",
                            "code": "00006911731",
                            "display": "montelukast sodium"
                        }
                    ],
                    "text": "Content Value with ID"
                },
                "subject": {
                    "reference": "Patient/607d1a67513568a2dbacc6f1d2e2cd30",
                    "type": "Patient"
                },
                "requester": {
                    "reference": "Practitioner/591e787882e6a4d8061ac0e43c432f70",
                    "type": "Practitioner",
                    "display": "wUeZW7xykF4awP/zfRyKrxZRTZCadn8xdmYx1qQptPw= SdC5cHCo1PCR87TsuqOb1mptJc9NODhuK6o2NiA7z7s="
                },
                "performer": {
                    "reference": "Organization/f8bd0d498327f60790f78698823f4141",
                    "type": "Organization"
                },
                "dosageInstruction": [
                    {
                        "text": "Content Value with ID",
                        "patientInstruction": "Content Value with ID",
                        "timing": {
                            "repeat": {
                                "frequency": 1,
                                "period": 1,
                                "periodUnit": "d"
                            }
                        },
                        "route": {
                            "coding": [
                                {
                                    "system": "http://snomed.info/sct",
                                    "code": "C38288",
                                    "display": "ORAL"
                                }
                            ]
                        },
                        "doseAndRate": [
                            {
                                "doseQuantity": {
                                    "value": 1,
                                    "unit": "{tbl}",
                                    "system": "http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm"
                                }
                            }
                        ]
                    }
                ]
            },
            "search": {
                "mode": "match"
            }
        },
        {
            "fullUrl": "https://healthcare.googleapis.com/v1/projects/edp-qa-storage/locations/us/datasets/edp_ent_cdr_ods_qa_ds/fhirStores/edp_ent_cdr_fhir_ods_qa/fhir/MedicationRequest/b914517be217eeec10031ee58f1d76ab",
            "resource": {
                "resourceType": "MedicationRequest",
                "id": "b914517be217eeec10031ee58f1d76ab",
                "meta": {
                    "versionId": "MTY0NTY1NzQ1MjczMTMzMzAwMA",
                    "lastUpdated": "2022-02-23T23:04:12.731333+00:00",
                    "source": "gs://usmedpent-eds-qalan-cq/inbound/test/test_0223_ra/SPCLTY_PROVIDER.TCIA_CLNC_DOC.del.028.lob.Deid.xml.utf8.cqi.json",
                    "tag": [
                        {
                            "code": "CQ-CCDA"
                        }
                    ]
                },
                "identifier": [
                    {
                        "type": {
                            "coding": [
                                {
                                    "system": "urn:CQ-CCDA",
                                    "code": "CQ_CCDA",
                                    "display": "CQ CCDA"
                                }
                            ]
                        },
                        "system": "urn:CQ-CCDA",
                        "value": "4ae149e0-e378-47ea-acf1-774c5e360280"
                    }
                ],
                "status": "active",
                "intent": "plan",
                "medicationCodeableConcept": {
                    "coding": [
                        {
                            "system": "http://www.nlm.nih.gov/research/umls/rxnorm",
                            "code": "152695",
                            "display": "Content Value with ID"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.69",
                            "code": "29300012501",
                            "display": "meloxicam"
                        }
                    ],
                    "text": "Content Value with ID"
                },
                "subject": {
                    "reference": "Patient/607d1a67513568a2dbacc6f1d2e2cd30",
                    "type": "Patient"
                },
                "authoredOn": "2021-07-19T00:00:00+00:00",
                "requester": {
                    "reference": "Practitioner/591e787882e6a4d8061ac0e43c432f70",
                    "type": "Practitioner",
                    "display": "wUeZW7xykF4awP/zfRyKrxZRTZCadn8xdmYx1qQptPw= SdC5cHCo1PCR87TsuqOb1mptJc9NODhuK6o2NiA7z7s="
                },
                "performer": {
                    "reference": "Organization/f8bd0d498327f60790f78698823f4141",
                    "type": "Organization"
                },
                "dosageInstruction": [
                    {
                        "text": "Content Value with ID",
                        "patientInstruction": "Content Value with ID",
                        "timing": {
                            "repeat": {
                                "frequency": 1,
                                "period": 1,
                                "periodUnit": "d"
                            }
                        },
                        "route": {
                            "coding": [
                                {
                                    "system": "http://snomed.info/sct",
                                    "code": "C38288",
                                    "display": "ORAL"
                                }
                            ]
                        },
                        "doseAndRate": [
                            {
                                "doseQuantity": {
                                    "value": 1,
                                    "unit": "{tbl}",
                                    "system": "http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm"
                                }
                            }
                        ]
                    }
                ],
                "dispenseRequest": {
                    "validityPeriod": {
                        "start": "2021-07-19T00:00:00+00:00"
                    }
                }
            },
            "search": {
                "mode": "match"
            }
        },
        {
            "fullUrl": "https://healthcare.googleapis.com/v1/projects/edp-qa-storage/locations/us/datasets/edp_ent_cdr_ods_qa_ds/fhirStores/edp_ent_cdr_fhir_ods_qa/fhir/MedicationRequest/870b2c0a533914005cfbf1ad78fb2de0",
            "resource": {
                "resourceType": "MedicationRequest",
                "id": "870b2c0a533914005cfbf1ad78fb2de0",
                "meta": {
                    "versionId": "MTY0NTY1NzQ1MjczMTMzMzAwMA",
                    "lastUpdated": "2022-02-23T23:04:12.731333+00:00",
                    "source": "gs://usmedpent-eds-qalan-cq/inbound/test/test_0223_ra/SPCLTY_PROVIDER.TCIA_CLNC_DOC.del.028.lob.Deid.xml.utf8.cqi.json",
                    "tag": [
                        {
                            "code": "CQ-CCDA"
                        }
                    ]
                },
                "identifier": [
                    {
                        "type": {
                            "coding": [
                                {
                                    "system": "urn:CQ-CCDA",
                                    "code": "CQ_CCDA",
                                    "display": "CQ CCDA"
                                }
                            ]
                        },
                        "system": "urn:CQ-CCDA",
                        "value": "e664cf7c-42b4-45e2-a2dd-585b19d4cae8"
                    }
                ],
                "status": "active",
                "intent": "plan",
                "medicationCodeableConcept": {
                    "coding": [
                        {
                            "system": "http://www.nlm.nih.gov/research/umls/rxnorm",
                            "code": "729931",
                            "display": "Content Value with ID"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.88",
                            "code": "313581",
                            "display": "24 HR venlafaxine 150 MG Extended Release Oral Capsule"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.69",
                            "code": "00008083620",
                            "display": "venlafaxine HCl"
                        }
                    ],
                    "text": "Content Value with ID"
                },
                "subject": {
                    "reference": "Patient/607d1a67513568a2dbacc6f1d2e2cd30",
                    "type": "Patient"
                },
                "requester": {
                    "reference": "Practitioner/591e787882e6a4d8061ac0e43c432f70",
                    "type": "Practitioner",
                    "display": "wUeZW7xykF4awP/zfRyKrxZRTZCadn8xdmYx1qQptPw= SdC5cHCo1PCR87TsuqOb1mptJc9NODhuK6o2NiA7z7s="
                },
                "performer": {
                    "reference": "Organization/f8bd0d498327f60790f78698823f4141",
                    "type": "Organization"
                },
                "dosageInstruction": [
                    {
                        "text": "Content Value with ID",
                        "patientInstruction": "Content Value with ID",
                        "timing": {
                            "repeat": {
                                "frequency": 1,
                                "period": 1,
                                "periodUnit": "d"
                            }
                        },
                        "route": {
                            "coding": [
                                {
                                    "system": "http://snomed.info/sct",
                                    "code": "C38288",
                                    "display": "ORAL"
                                }
                            ]
                        },
                        "doseAndRate": [
                            {
                                "doseQuantity": {
                                    "value": 1,
                                    "unit": "{capsule}",
                                    "system": "http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm"
                                }
                            }
                        ]
                    }
                ]
            },
            "search": {
                "mode": "match"
            }
        },
        {
            "fullUrl": "https://healthcare.googleapis.com/v1/projects/edp-qa-storage/locations/us/datasets/edp_ent_cdr_ods_qa_ds/fhirStores/edp_ent_cdr_fhir_ods_qa/fhir/MedicationRequest/23251f2385529686c0b19e99a1c44f69",
            "resource": {
                "resourceType": "MedicationRequest",
                "id": "23251f2385529686c0b19e99a1c44f69",
                "meta": {
                    "versionId": "MTY0NTY1NzQ1MjczMTMzMzAwMA",
                    "lastUpdated": "2022-02-23T23:04:12.731333+00:00",
                    "source": "gs://usmedpent-eds-qalan-cq/inbound/test/test_0223_ra/SPCLTY_PROVIDER.TCIA_CLNC_DOC.del.028.lob.Deid.xml.utf8.cqi.json",
                    "tag": [
                        {
                            "code": "CQ-CCDA"
                        }
                    ]
                },
                "identifier": [
                    {
                        "type": {
                            "coding": [
                                {
                                    "system": "urn:CQ-CCDA",
                                    "code": "CQ_CCDA",
                                    "display": "CQ CCDA"
                                }
                            ]
                        },
                        "system": "urn:CQ-CCDA",
                        "value": "bcc63c96-2de4-468e-9568-127ec85f2f54"
                    }
                ],
                "status": "active",
                "intent": "plan",
                "medicationCodeableConcept": {
                    "coding": [
                        {
                            "system": "http://www.nlm.nih.gov/research/umls/rxnorm",
                            "code": "1243440",
                            "display": "Content Value with ID"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.88",
                            "code": "1148399",
                            "display": "8 HR acetaminophen 650 MG Extended Release Oral Tablet"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.69",
                            "code": "00045083821",
                            "display": "acetaminophen"
                        }
                    ],
                    "text": "Content Value with ID"
                },
                "subject": {
                    "reference": "Patient/607d1a67513568a2dbacc6f1d2e2cd30",
                    "type": "Patient"
                },
                "requester": {
                    "reference": "Practitioner/591e787882e6a4d8061ac0e43c432f70",
                    "type": "Practitioner",
                    "display": "wUeZW7xykF4awP/zfRyKrxZRTZCadn8xdmYx1qQptPw= SdC5cHCo1PCR87TsuqOb1mptJc9NODhuK6o2NiA7z7s="
                },
                "performer": {
                    "reference": "Organization/f8bd0d498327f60790f78698823f4141",
                    "type": "Organization"
                },
                "dosageInstruction": [
                    {
                        "text": "Content Value with ID",
                        "patientInstruction": "Content Value with ID",
                        "timing": {
                            "repeat": {
                                "frequency": 1,
                                "period": 8,
                                "periodUnit": "h"
                            }
                        },
                        "route": {
                            "coding": [
                                {
                                    "system": "http://snomed.info/sct",
                                    "code": "C38288",
                                    "display": "ORAL"
                                }
                            ]
                        },
                        "doseAndRate": [
                            {
                                "doseQuantity": {
                                    "value": 2,
                                    "unit": "{tbl}",
                                    "system": "http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm"
                                }
                            }
                        ]
                    }
                ]
            },
            "search": {
                "mode": "match"
            }
        },
        {
            "fullUrl": "https://healthcare.googleapis.com/v1/projects/edp-qa-storage/locations/us/datasets/edp_ent_cdr_ods_qa_ds/fhirStores/edp_ent_cdr_fhir_ods_qa/fhir/MedicationRequest/c72954e297eaf90746a514c39fa0d2db",
            "resource": {
                "resourceType": "MedicationRequest",
                "id": "c72954e297eaf90746a514c39fa0d2db",
                "meta": {
                    "versionId": "MTY0NTY1NzQ1MjczMTMzMzAwMA",
                    "lastUpdated": "2022-02-23T23:04:12.731333+00:00",
                    "source": "gs://usmedpent-eds-qalan-cq/inbound/test/test_0223_ra/SPCLTY_PROVIDER.TCIA_CLNC_DOC.del.028.lob.Deid.xml.utf8.cqi.json",
                    "tag": [
                        {
                            "code": "CQ-CCDA"
                        }
                    ]
                },
                "identifier": [
                    {
                        "type": {
                            "coding": [
                                {
                                    "system": "urn:CQ-CCDA",
                                    "code": "CQ_CCDA",
                                    "display": "CQ CCDA"
                                }
                            ]
                        },
                        "system": "urn:CQ-CCDA",
                        "value": "d3b0668a-b42f-4f0a-b5b2-801a4e55a353"
                    }
                ],
                "status": "active",
                "intent": "plan",
                "medicationCodeableConcept": {
                    "coding": [
                        {
                            "system": "http://www.nlm.nih.gov/research/umls/rxnorm",
                            "code": "200329",
                            "display": "Content Value with ID"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.69",
                            "code": "00093529410",
                            "display": "omeprazole"
                        }
                    ],
                    "text": "Content Value with ID"
                },
                "subject": {
                    "reference": "Patient/607d1a67513568a2dbacc6f1d2e2cd30",
                    "type": "Patient"
                },
                "requester": {
                    "reference": "Practitioner/591e787882e6a4d8061ac0e43c432f70",
                    "type": "Practitioner",
                    "display": "wUeZW7xykF4awP/zfRyKrxZRTZCadn8xdmYx1qQptPw= SdC5cHCo1PCR87TsuqOb1mptJc9NODhuK6o2NiA7z7s="
                },
                "performer": {
                    "reference": "Organization/f8bd0d498327f60790f78698823f4141",
                    "type": "Organization"
                },
                "dosageInstruction": [
                    {
                        "text": "Content Value with ID",
                        "patientInstruction": "Content Value with ID",
                        "timing": {
                            "repeat": {
                                "frequency": 1,
                                "period": 1,
                                "periodUnit": "d"
                            }
                        },
                        "route": {
                            "coding": [
                                {
                                    "system": "http://snomed.info/sct",
                                    "code": "C38288",
                                    "display": "ORAL"
                                }
                            ]
                        },
                        "doseAndRate": [
                            {
                                "doseQuantity": {
                                    "value": 1,
                                    "unit": "{capsule}",
                                    "system": "http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm"
                                }
                            }
                        ]
                    }
                ]
            },
            "search": {
                "mode": "match"
            }
        },
        {
            "fullUrl": "https://healthcare.googleapis.com/v1/projects/edp-qa-storage/locations/us/datasets/edp_ent_cdr_ods_qa_ds/fhirStores/edp_ent_cdr_fhir_ods_qa/fhir/MedicationRequest/06c95492cb52728fc0822b6b913a7fff",
            "resource": {
                "resourceType": "MedicationRequest",
                "id": "06c95492cb52728fc0822b6b913a7fff",
                "meta": {
                    "versionId": "MTY0NTY1NzQ1MjczMTMzMzAwMA",
                    "lastUpdated": "2022-02-23T23:04:12.731333+00:00",
                    "source": "gs://usmedpent-eds-qalan-cq/inbound/test/test_0223_ra/SPCLTY_PROVIDER.TCIA_CLNC_DOC.del.028.lob.Deid.xml.utf8.cqi.json",
                    "tag": [
                        {
                            "code": "CQ-CCDA"
                        }
                    ]
                },
                "identifier": [
                    {
                        "type": {
                            "coding": [
                                {
                                    "system": "urn:CQ-CCDA",
                                    "code": "CQ_CCDA",
                                    "display": "CQ CCDA"
                                }
                            ]
                        },
                        "system": "urn:CQ-CCDA",
                        "value": "f1c447d7-ca8b-47f0-946e-4a10aaf63fcd"
                    }
                ],
                "status": "active",
                "intent": "plan",
                "medicationCodeableConcept": {
                    "coding": [
                        {
                            "system": "http://www.nlm.nih.gov/research/umls/rxnorm",
                            "code": "105585",
                            "display": "Content Value with ID"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.69",
                            "code": "00054455015",
                            "display": "methotrexate sodium"
                        }
                    ],
                    "text": "Content Value with ID"
                },
                "subject": {
                    "reference": "Patient/607d1a67513568a2dbacc6f1d2e2cd30",
                    "type": "Patient"
                },
                "authoredOn": "2021-07-19T00:00:00+00:00",
                "requester": {
                    "reference": "Practitioner/591e787882e6a4d8061ac0e43c432f70",
                    "type": "Practitioner",
                    "display": "wUeZW7xykF4awP/zfRyKrxZRTZCadn8xdmYx1qQptPw= SdC5cHCo1PCR87TsuqOb1mptJc9NODhuK6o2NiA7z7s="
                },
                "performer": {
                    "reference": "Organization/f8bd0d498327f60790f78698823f4141",
                    "type": "Organization"
                },
                "dosageInstruction": [
                    {
                        "text": "Content Value with ID",
                        "patientInstruction": "Content Value with ID",
                        "timing": {
                            "repeat": {
                                "frequency": 1,
                                "period": 1,
                                "periodUnit": "wk"
                            }
                        },
                        "route": {
                            "coding": [
                                {
                                    "system": "http://snomed.info/sct",
                                    "code": "C38288",
                                    "display": "ORAL"
                                }
                            ]
                        },
                        "doseAndRate": [
                            {
                                "doseQuantity": {
                                    "value": 8,
                                    "unit": "{tbl}",
                                    "system": "http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm"
                                }
                            }
                        ]
                    }
                ],
                "dispenseRequest": {
                    "validityPeriod": {
                        "start": "2021-07-19T00:00:00+00:00"
                    }
                }
            },
            "search": {
                "mode": "match"
            }
        },
        {
            "fullUrl": "https://healthcare.googleapis.com/v1/projects/edp-qa-storage/locations/us/datasets/edp_ent_cdr_ods_qa_ds/fhirStores/edp_ent_cdr_fhir_ods_qa/fhir/MedicationRequest/6d17eaac816d92a9e0f76b2bf6dfc57d",
            "resource": {
                "resourceType": "MedicationRequest",
                "id": "6d17eaac816d92a9e0f76b2bf6dfc57d",
                "meta": {
                    "versionId": "MTY0NTY1NzQ1MjczMTMzMzAwMA",
                    "lastUpdated": "2022-02-23T23:04:12.731333+00:00",
                    "source": "gs://usmedpent-eds-qalan-cq/inbound/test/test_0223_ra/SPCLTY_PROVIDER.TCIA_CLNC_DOC.del.028.lob.Deid.xml.utf8.cqi.json",
                    "tag": [
                        {
                            "code": "CQ-CCDA"
                        }
                    ]
                },
                "identifier": [
                    {
                        "type": {
                            "coding": [
                                {
                                    "system": "urn:CQ-CCDA",
                                    "code": "CQ_CCDA",
                                    "display": "CQ CCDA"
                                }
                            ]
                        },
                        "system": "urn:CQ-CCDA",
                        "value": "695a0f45-7a78-4d7c-8718-29ffe9540a77"
                    }
                ],
                "status": "active",
                "intent": "plan",
                "medicationCodeableConcept": {
                    "coding": [
                        {
                            "system": "http://www.nlm.nih.gov/research/umls/rxnorm",
                            "code": "1653225",
                            "display": "Content Value with ID"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.88",
                            "code": "1653223",
                            "display": "1 ML etanercept 50 MG/ML Auto-Injector"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.69",
                            "code": "58406003204",
                            "display": "etanercept"
                        }
                    ],
                    "text": "Content Value with ID"
                },
                "subject": {
                    "reference": "Patient/607d1a67513568a2dbacc6f1d2e2cd30",
                    "type": "Patient"
                },
                "authoredOn": "2021-08-04T00:00:00+00:00",
                "requester": {
                    "reference": "Practitioner/591e787882e6a4d8061ac0e43c432f70",
                    "type": "Practitioner",
                    "display": "wUeZW7xykF4awP/zfRyKrxZRTZCadn8xdmYx1qQptPw= SdC5cHCo1PCR87TsuqOb1mptJc9NODhuK6o2NiA7z7s="
                },
                "performer": {
                    "reference": "Organization/f8bd0d498327f60790f78698823f4141",
                    "type": "Organization"
                },
                "dosageInstruction": [
                    {
                        "text": "Content Value with ID",
                        "patientInstruction": "Content Value with ID"
                    }
                ],
                "dispenseRequest": {
                    "validityPeriod": {
                        "start": "2021-08-04T00:00:00+00:00"
                    }
                }
            },
            "search": {
                "mode": "match"
            }
        },
        {
            "fullUrl": "https://healthcare.googleapis.com/v1/projects/edp-qa-storage/locations/us/datasets/edp_ent_cdr_ods_qa_ds/fhirStores/edp_ent_cdr_fhir_ods_qa/fhir/MedicationRequest/7651af98d0441944d3d26ed1cda03a65",
            "resource": {
                "resourceType": "MedicationRequest",
                "id": "7651af98d0441944d3d26ed1cda03a65",
                "meta": {
                    "versionId": "MTY0NTY1NzQ1MjczMTMzMzAwMA",
                    "lastUpdated": "2022-02-23T23:04:12.731333+00:00",
                    "source": "gs://usmedpent-eds-qalan-cq/inbound/test/test_0223_ra/SPCLTY_PROVIDER.TCIA_CLNC_DOC.del.028.lob.Deid.xml.utf8.cqi.json",
                    "tag": [
                        {
                            "code": "CQ-CCDA"
                        }
                    ]
                },
                "identifier": [
                    {
                        "type": {
                            "coding": [
                                {
                                    "system": "urn:CQ-CCDA",
                                    "code": "CQ_CCDA",
                                    "display": "CQ CCDA"
                                }
                            ]
                        },
                        "system": "urn:CQ-CCDA",
                        "value": "02ff0cc0-c95b-4f22-b8c9-aaff388f68a4"
                    }
                ],
                "status": "active",
                "intent": "plan",
                "medicationCodeableConcept": {
                    "coding": [
                        {
                            "system": "http://www.nlm.nih.gov/research/umls/rxnorm",
                            "code": "310798",
                            "display": "Content Value with ID"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.69",
                            "code": "00172208360",
                            "display": "hydrochlorothiazide"
                        }
                    ],
                    "text": "Content Value with ID"
                },
                "subject": {
                    "reference": "Patient/607d1a67513568a2dbacc6f1d2e2cd30",
                    "type": "Patient"
                },
                "requester": {
                    "reference": "Practitioner/591e787882e6a4d8061ac0e43c432f70",
                    "type": "Practitioner",
                    "display": "wUeZW7xykF4awP/zfRyKrxZRTZCadn8xdmYx1qQptPw= SdC5cHCo1PCR87TsuqOb1mptJc9NODhuK6o2NiA7z7s="
                },
                "performer": {
                    "reference": "Organization/f8bd0d498327f60790f78698823f4141",
                    "type": "Organization"
                },
                "dosageInstruction": [
                    {
                        "text": "Content Value with ID",
                        "patientInstruction": "Content Value with ID",
                        "timing": {
                            "repeat": {
                                "frequency": 1,
                                "period": 1,
                                "periodUnit": "d"
                            }
                        },
                        "route": {
                            "coding": [
                                {
                                    "system": "http://snomed.info/sct",
                                    "code": "C38288",
                                    "display": "ORAL"
                                }
                            ]
                        },
                        "doseAndRate": [
                            {
                                "doseQuantity": {
                                    "value": 1,
                                    "unit": "{tbl}",
                                    "system": "http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm"
                                }
                            }
                        ]
                    }
                ]
            },
            "search": {
                "mode": "match"
            }
        },
        {
            "fullUrl": "https://healthcare.googleapis.com/v1/projects/edp-qa-storage/locations/us/datasets/edp_ent_cdr_ods_qa_ds/fhirStores/edp_ent_cdr_fhir_ods_qa/fhir/MedicationRequest/bb94abc646810ee5be178386098a9123",
            "resource": {
                "resourceType": "MedicationRequest",
                "id": "bb94abc646810ee5be178386098a9123",
                "meta": {
                    "versionId": "MTY0NTY1NzQ1MjczMTMzMzAwMA",
                    "lastUpdated": "2022-02-23T23:04:12.731333+00:00",
                    "source": "gs://usmedpent-eds-qalan-cq/inbound/test/test_0223_ra/SPCLTY_PROVIDER.TCIA_CLNC_DOC.del.028.lob.Deid.xml.utf8.cqi.json",
                    "tag": [
                        {
                            "code": "CQ-CCDA"
                        }
                    ]
                },
                "identifier": [
                    {
                        "type": {
                            "coding": [
                                {
                                    "system": "urn:CQ-CCDA",
                                    "code": "CQ_CCDA",
                                    "display": "CQ CCDA"
                                }
                            ]
                        },
                        "system": "urn:CQ-CCDA",
                        "value": "2b98492c-bd7a-469a-aa76-4aa54f145799"
                    }
                ],
                "status": "active",
                "intent": "plan",
                "medicationCodeableConcept": {
                    "coding": [
                        {
                            "system": "http://www.nlm.nih.gov/research/umls/rxnorm",
                            "code": "198641",
                            "display": "Content Value with ID"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.69",
                            "code": "00536384301",
                            "display": "folic acid"
                        }
                    ],
                    "text": "Content Value with ID"
                },
                "subject": {
                    "reference": "Patient/607d1a67513568a2dbacc6f1d2e2cd30",
                    "type": "Patient"
                },
                "requester": {
                    "reference": "Practitioner/591e787882e6a4d8061ac0e43c432f70",
                    "type": "Practitioner",
                    "display": "wUeZW7xykF4awP/zfRyKrxZRTZCadn8xdmYx1qQptPw= SdC5cHCo1PCR87TsuqOb1mptJc9NODhuK6o2NiA7z7s="
                },
                "performer": {
                    "reference": "Organization/f8bd0d498327f60790f78698823f4141",
                    "type": "Organization"
                },
                "dosageInstruction": [
                    {
                        "text": "Content Value with ID",
                        "patientInstruction": "Content Value with ID",
                        "timing": {
                            "repeat": {
                                "frequency": 1,
                                "period": 2,
                                "periodUnit": "d"
                            }
                        },
                        "route": {
                            "coding": [
                                {
                                    "system": "http://snomed.info/sct",
                                    "code": "C38288",
                                    "display": "ORAL"
                                }
                            ]
                        },
                        "doseAndRate": [
                            {
                                "doseQuantity": {
                                    "value": 1,
                                    "unit": "{tbl}",
                                    "system": "http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm"
                                }
                            }
                        ]
                    }
                ]
            },
            "search": {
                "mode": "match"
            }
        },
        {
            "fullUrl": "https://healthcare.googleapis.com/v1/projects/edp-qa-storage/locations/us/datasets/edp_ent_cdr_ods_qa_ds/fhirStores/edp_ent_cdr_fhir_ods_qa/fhir/MedicationRequest/4e16daa0d13edb12dd51b6302f5ae942",
            "resource": {
                "resourceType": "MedicationRequest",
                "id": "4e16daa0d13edb12dd51b6302f5ae942",
                "meta": {
                    "versionId": "MTY0NTQ3OTI5ODY2NTgxMjAwMA",
                    "lastUpdated": "2022-02-21T21:34:58.665812+00:00",
                    "source": "gs://usmedpent-eds-qalan-cq/inbound/test/test_0220z/SPCLTY_PROVIDER.TCIA_CLNC_DOC.del.028.lob.Deid.xml.utf8.cqi.json",
                    "tag": [
                        {
                            "code": "CQ-CCDA"
                        }
                    ]
                },
                "identifier": [
                    {
                        "type": {
                            "coding": [
                                {
                                    "system": "urn:CQ-CCDA",
                                    "code": "CQ_CCDA",
                                    "display": "CQ CCDA"
                                }
                            ]
                        },
                        "system": "urn:CQ-CCDA",
                        "value": "0cf9ea28-65c9-43b1-8395-0d7ec6e12aeb"
                    }
                ],
                "status": "active",
                "intent": "plan",
                "medicationCodeableConcept": {
                    "coding": [
                        {
                            "system": "http://www.nlm.nih.gov/research/umls/rxnorm",
                            "code": "896245",
                            "display": "Content Value with ID"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.69",
                            "code": "00173071620",
                            "display": "fluticasone propion/salmeterol"
                        }
                    ],
                    "text": "Content Value with ID"
                },
                "subject": {
                    "reference": "Patient/607d1a67513568a2dbacc6f1d2e2cd30",
                    "type": "Patient"
                },
                "requester": {
                    "reference": "Practitioner/591e787882e6a4d8061ac0e43c432f70",
                    "type": "Practitioner",
                    "display": "wUeZW7xykF4awP/zfRyKrxZRTZCadn8xdmYx1qQptPw= SdC5cHCo1PCR87TsuqOb1mptJc9NODhuK6o2NiA7z7s="
                },
                "performer": {
                    "reference": "Organization/f8bd0d498327f60790f78698823f4141",
                    "type": "Organization"
                },
                "dosageInstruction": [
                    {
                        "text": "Content Value with IDContent Value with ID",
                        "patientInstruction": "Content Value with ID",
                        "timing": {
                            "repeat": {
                                "frequency": 1,
                                "period": 12,
                                "periodUnit": "h"
                            }
                        },
                        "route": {
                            "coding": [
                                {
                                    "system": "http://snomed.info/sct",
                                    "code": "C38216",
                                    "display": "RESPIRATORY (INHALATION)"
                                }
                            ]
                        },
                        "doseAndRate": [
                            {
                                "doseQuantity": {
                                    "value": 1,
                                    "unit": "{puff}",
                                    "system": "http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm"
                                }
                            }
                        ]
                    }
                ]
            },
            "search": {
                "mode": "match"
            }
        },
        {
            "fullUrl": "https://healthcare.googleapis.com/v1/projects/edp-qa-storage/locations/us/datasets/edp_ent_cdr_ods_qa_ds/fhirStores/edp_ent_cdr_fhir_ods_qa/fhir/MedicationRequest/5ff616e8494653764594178a2140f789",
            "resource": {
                "resourceType": "MedicationRequest",
                "id": "5ff616e8494653764594178a2140f789",
                "meta": {
                    "versionId": "MTY0NTQ3OTI5ODY2NTgxMjAwMA",
                    "lastUpdated": "2022-02-21T21:34:58.665812+00:00",
                    "source": "gs://usmedpent-eds-qalan-cq/inbound/test/test_0220z/SPCLTY_PROVIDER.TCIA_CLNC_DOC.del.028.lob.Deid.xml.utf8.cqi.json",
                    "tag": [
                        {
                            "code": "CQ-CCDA"
                        }
                    ]
                },
                "identifier": [
                    {
                        "type": {
                            "coding": [
                                {
                                    "system": "urn:CQ-CCDA",
                                    "code": "CQ_CCDA",
                                    "display": "CQ CCDA"
                                }
                            ]
                        },
                        "system": "urn:CQ-CCDA",
                        "value": "02ff0cc0-c95b-4f22-b8c9-aaff388f68a4"
                    }
                ],
                "status": "active",
                "intent": "plan",
                "medicationCodeableConcept": {
                    "coding": [
                        {
                            "system": "http://www.nlm.nih.gov/research/umls/rxnorm",
                            "code": "310798",
                            "display": "Content Value with ID"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.69",
                            "code": "00172208360",
                            "display": "hydrochlorothiazide"
                        }
                    ],
                    "text": "Content Value with ID"
                },
                "subject": {
                    "reference": "Patient/607d1a67513568a2dbacc6f1d2e2cd30",
                    "type": "Patient"
                },
                "requester": {
                    "reference": "Practitioner/591e787882e6a4d8061ac0e43c432f70",
                    "type": "Practitioner",
                    "display": "wUeZW7xykF4awP/zfRyKrxZRTZCadn8xdmYx1qQptPw= SdC5cHCo1PCR87TsuqOb1mptJc9NODhuK6o2NiA7z7s="
                },
                "performer": {
                    "reference": "Organization/f8bd0d498327f60790f78698823f4141",
                    "type": "Organization"
                },
                "dosageInstruction": [
                    {
                        "text": "Content Value with IDContent Value with ID",
                        "patientInstruction": "Content Value with ID",
                        "timing": {
                            "repeat": {
                                "frequency": 1,
                                "period": 1,
                                "periodUnit": "d"
                            }
                        },
                        "route": {
                            "coding": [
                                {
                                    "system": "http://snomed.info/sct",
                                    "code": "C38288",
                                    "display": "ORAL"
                                }
                            ]
                        },
                        "doseAndRate": [
                            {
                                "doseQuantity": {
                                    "value": 1,
                                    "unit": "{tbl}",
                                    "system": "http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm"
                                }
                            }
                        ]
                    }
                ]
            },
            "search": {
                "mode": "match"
            }
        },
        {
            "fullUrl": "https://healthcare.googleapis.com/v1/projects/edp-qa-storage/locations/us/datasets/edp_ent_cdr_ods_qa_ds/fhirStores/edp_ent_cdr_fhir_ods_qa/fhir/MedicationRequest/c216495e4984c0500108d2d7b8d82c50",
            "resource": {
                "resourceType": "MedicationRequest",
                "id": "c216495e4984c0500108d2d7b8d82c50",
                "meta": {
                    "versionId": "MTY0NTQ3OTI5ODY2NTgxMjAwMA",
                    "lastUpdated": "2022-02-21T21:34:58.665812+00:00",
                    "source": "gs://usmedpent-eds-qalan-cq/inbound/test/test_0220z/SPCLTY_PROVIDER.TCIA_CLNC_DOC.del.028.lob.Deid.xml.utf8.cqi.json",
                    "tag": [
                        {
                            "code": "CQ-CCDA"
                        }
                    ]
                },
                "identifier": [
                    {
                        "type": {
                            "coding": [
                                {
                                    "system": "urn:CQ-CCDA",
                                    "code": "CQ_CCDA",
                                    "display": "CQ CCDA"
                                }
                            ]
                        },
                        "system": "urn:CQ-CCDA",
                        "value": "e664cf7c-42b4-45e2-a2dd-585b19d4cae8"
                    }
                ],
                "status": "active",
                "intent": "plan",
                "medicationCodeableConcept": {
                    "coding": [
                        {
                            "system": "http://www.nlm.nih.gov/research/umls/rxnorm",
                            "code": "729931",
                            "display": "Content Value with ID"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.88",
                            "code": "313581",
                            "display": "24 HR venlafaxine 150 MG Extended Release Oral Capsule"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.69",
                            "code": "00008083620",
                            "display": "venlafaxine HCl"
                        }
                    ],
                    "text": "Content Value with ID"
                },
                "subject": {
                    "reference": "Patient/607d1a67513568a2dbacc6f1d2e2cd30",
                    "type": "Patient"
                },
                "requester": {
                    "reference": "Practitioner/591e787882e6a4d8061ac0e43c432f70",
                    "type": "Practitioner",
                    "display": "wUeZW7xykF4awP/zfRyKrxZRTZCadn8xdmYx1qQptPw= SdC5cHCo1PCR87TsuqOb1mptJc9NODhuK6o2NiA7z7s="
                },
                "performer": {
                    "reference": "Organization/f8bd0d498327f60790f78698823f4141",
                    "type": "Organization"
                },
                "dosageInstruction": [
                    {
                        "text": "Content Value with IDContent Value with ID",
                        "patientInstruction": "Content Value with ID",
                        "timing": {
                            "repeat": {
                                "frequency": 1,
                                "period": 1,
                                "periodUnit": "d"
                            }
                        },
                        "route": {
                            "coding": [
                                {
                                    "system": "http://snomed.info/sct",
                                    "code": "C38288",
                                    "display": "ORAL"
                                }
                            ]
                        },
                        "doseAndRate": [
                            {
                                "doseQuantity": {
                                    "value": 1,
                                    "unit": "{capsule}",
                                    "system": "http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm"
                                }
                            }
                        ]
                    }
                ]
            },
            "search": {
                "mode": "match"
            }
        },
        {
            "fullUrl": "https://healthcare.googleapis.com/v1/projects/edp-qa-storage/locations/us/datasets/edp_ent_cdr_ods_qa_ds/fhirStores/edp_ent_cdr_fhir_ods_qa/fhir/MedicationRequest/3a89d6dcfa4572bf1ab05bc97e6c8660",
            "resource": {
                "resourceType": "MedicationRequest",
                "id": "3a89d6dcfa4572bf1ab05bc97e6c8660",
                "meta": {
                    "versionId": "MTY0NTQ3OTI5ODY2NTgxMjAwMA",
                    "lastUpdated": "2022-02-21T21:34:58.665812+00:00",
                    "source": "gs://usmedpent-eds-qalan-cq/inbound/test/test_0220z/SPCLTY_PROVIDER.TCIA_CLNC_DOC.del.028.lob.Deid.xml.utf8.cqi.json",
                    "tag": [
                        {
                            "code": "CQ-CCDA"
                        }
                    ]
                },
                "identifier": [
                    {
                        "type": {
                            "coding": [
                                {
                                    "system": "urn:CQ-CCDA",
                                    "code": "CQ_CCDA",
                                    "display": "CQ CCDA"
                                }
                            ]
                        },
                        "system": "urn:CQ-CCDA",
                        "value": "2bf090ca-8b8a-4c3c-a47e-af01cdec203b"
                    }
                ],
                "status": "active",
                "intent": "plan",
                "medicationCodeableConcept": {
                    "coding": [
                        {
                            "system": "http://www.nlm.nih.gov/research/umls/rxnorm",
                            "code": "153892",
                            "display": "Content Value with ID"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.88",
                            "code": "200224",
                            "display": "montelukast 10 MG Oral Tablet"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.69",
                            "code": "00006911731",
                            "display": "montelukast sodium"
                        }
                    ],
                    "text": "Content Value with ID"
                },
                "subject": {
                    "reference": "Patient/607d1a67513568a2dbacc6f1d2e2cd30",
                    "type": "Patient"
                },
                "requester": {
                    "reference": "Practitioner/591e787882e6a4d8061ac0e43c432f70",
                    "type": "Practitioner",
                    "display": "wUeZW7xykF4awP/zfRyKrxZRTZCadn8xdmYx1qQptPw= SdC5cHCo1PCR87TsuqOb1mptJc9NODhuK6o2NiA7z7s="
                },
                "performer": {
                    "reference": "Organization/f8bd0d498327f60790f78698823f4141",
                    "type": "Organization"
                },
                "dosageInstruction": [
                    {
                        "text": "Content Value with IDContent Value with ID",
                        "patientInstruction": "Content Value with ID",
                        "timing": {
                            "repeat": {
                                "frequency": 1,
                                "period": 1,
                                "periodUnit": "d"
                            }
                        },
                        "route": {
                            "coding": [
                                {
                                    "system": "http://snomed.info/sct",
                                    "code": "C38288",
                                    "display": "ORAL"
                                }
                            ]
                        },
                        "doseAndRate": [
                            {
                                "doseQuantity": {
                                    "value": 1,
                                    "unit": "{tbl}",
                                    "system": "http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm"
                                }
                            }
                        ]
                    }
                ]
            },
            "search": {
                "mode": "match"
            }
        },
        {
            "fullUrl": "https://healthcare.googleapis.com/v1/projects/edp-qa-storage/locations/us/datasets/edp_ent_cdr_ods_qa_ds/fhirStores/edp_ent_cdr_fhir_ods_qa/fhir/MedicationRequest/45d7499030d4e855bf4ec3196001da95",
            "resource": {
                "resourceType": "MedicationRequest",
                "id": "45d7499030d4e855bf4ec3196001da95",
                "meta": {
                    "versionId": "MTY0NTQ3OTI5ODY2NTgxMjAwMA",
                    "lastUpdated": "2022-02-21T21:34:58.665812+00:00",
                    "source": "gs://usmedpent-eds-qalan-cq/inbound/test/test_0220z/SPCLTY_PROVIDER.TCIA_CLNC_DOC.del.028.lob.Deid.xml.utf8.cqi.json",
                    "tag": [
                        {
                            "code": "CQ-CCDA"
                        }
                    ]
                },
                "identifier": [
                    {
                        "type": {
                            "coding": [
                                {
                                    "system": "urn:CQ-CCDA",
                                    "code": "CQ_CCDA",
                                    "display": "CQ CCDA"
                                }
                            ]
                        },
                        "system": "urn:CQ-CCDA",
                        "value": "4ae149e0-e378-47ea-acf1-774c5e360280"
                    }
                ],
                "status": "active",
                "intent": "plan",
                "medicationCodeableConcept": {
                    "coding": [
                        {
                            "system": "http://www.nlm.nih.gov/research/umls/rxnorm",
                            "code": "152695",
                            "display": "Content Value with ID"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.69",
                            "code": "29300012501",
                            "display": "meloxicam"
                        }
                    ],
                    "text": "Content Value with ID"
                },
                "subject": {
                    "reference": "Patient/607d1a67513568a2dbacc6f1d2e2cd30",
                    "type": "Patient"
                },
                "authoredOn": "2021-07-19T00:00:00+00:00",
                "requester": {
                    "reference": "Practitioner/591e787882e6a4d8061ac0e43c432f70",
                    "type": "Practitioner",
                    "display": "wUeZW7xykF4awP/zfRyKrxZRTZCadn8xdmYx1qQptPw= SdC5cHCo1PCR87TsuqOb1mptJc9NODhuK6o2NiA7z7s="
                },
                "performer": {
                    "reference": "Organization/f8bd0d498327f60790f78698823f4141",
                    "type": "Organization"
                },
                "dosageInstruction": [
                    {
                        "text": "Content Value with IDContent Value with ID",
                        "patientInstruction": "Content Value with ID",
                        "timing": {
                            "repeat": {
                                "frequency": 1,
                                "period": 1,
                                "periodUnit": "d"
                            }
                        },
                        "route": {
                            "coding": [
                                {
                                    "system": "http://snomed.info/sct",
                                    "code": "C38288",
                                    "display": "ORAL"
                                }
                            ]
                        },
                        "doseAndRate": [
                            {
                                "doseQuantity": {
                                    "value": 1,
                                    "unit": "{tbl}",
                                    "system": "http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm"
                                }
                            }
                        ]
                    }
                ],
                "dispenseRequest": {
                    "validityPeriod": {
                        "start": "2021-07-19T00:00:00+00:00"
                    }
                }
            },
            "search": {
                "mode": "match"
            }
        },
        {
            "fullUrl": "https://healthcare.googleapis.com/v1/projects/edp-qa-storage/locations/us/datasets/edp_ent_cdr_ods_qa_ds/fhirStores/edp_ent_cdr_fhir_ods_qa/fhir/MedicationRequest/37775e991772dbc5b444824aa6527bb7",
            "resource": {
                "resourceType": "MedicationRequest",
                "id": "37775e991772dbc5b444824aa6527bb7",
                "meta": {
                    "versionId": "MTY0NTQ3OTI5ODY2NTgxMjAwMA",
                    "lastUpdated": "2022-02-21T21:34:58.665812+00:00",
                    "source": "gs://usmedpent-eds-qalan-cq/inbound/test/test_0220z/SPCLTY_PROVIDER.TCIA_CLNC_DOC.del.028.lob.Deid.xml.utf8.cqi.json",
                    "tag": [
                        {
                            "code": "CQ-CCDA"
                        }
                    ]
                },
                "identifier": [
                    {
                        "type": {
                            "coding": [
                                {
                                    "system": "urn:CQ-CCDA",
                                    "code": "CQ_CCDA",
                                    "display": "CQ CCDA"
                                }
                            ]
                        },
                        "system": "urn:CQ-CCDA",
                        "value": "d3b0668a-b42f-4f0a-b5b2-801a4e55a353"
                    }
                ],
                "status": "active",
                "intent": "plan",
                "medicationCodeableConcept": {
                    "coding": [
                        {
                            "system": "http://www.nlm.nih.gov/research/umls/rxnorm",
                            "code": "200329",
                            "display": "Content Value with ID"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.69",
                            "code": "00093529410",
                            "display": "omeprazole"
                        }
                    ],
                    "text": "Content Value with ID"
                },
                "subject": {
                    "reference": "Patient/607d1a67513568a2dbacc6f1d2e2cd30",
                    "type": "Patient"
                },
                "requester": {
                    "reference": "Practitioner/591e787882e6a4d8061ac0e43c432f70",
                    "type": "Practitioner",
                    "display": "wUeZW7xykF4awP/zfRyKrxZRTZCadn8xdmYx1qQptPw= SdC5cHCo1PCR87TsuqOb1mptJc9NODhuK6o2NiA7z7s="
                },
                "performer": {
                    "reference": "Organization/f8bd0d498327f60790f78698823f4141",
                    "type": "Organization"
                },
                "dosageInstruction": [
                    {
                        "text": "Content Value with IDContent Value with ID",
                        "patientInstruction": "Content Value with ID",
                        "timing": {
                            "repeat": {
                                "frequency": 1,
                                "period": 1,
                                "periodUnit": "d"
                            }
                        },
                        "route": {
                            "coding": [
                                {
                                    "system": "http://snomed.info/sct",
                                    "code": "C38288",
                                    "display": "ORAL"
                                }
                            ]
                        },
                        "doseAndRate": [
                            {
                                "doseQuantity": {
                                    "value": 1,
                                    "unit": "{capsule}",
                                    "system": "http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm"
                                }
                            }
                        ]
                    }
                ]
            },
            "search": {
                "mode": "match"
            }
        },
        {
            "fullUrl": "https://healthcare.googleapis.com/v1/projects/edp-qa-storage/locations/us/datasets/edp_ent_cdr_ods_qa_ds/fhirStores/edp_ent_cdr_fhir_ods_qa/fhir/MedicationRequest/ff6123985bd581b01e890d665af1dd3f",
            "resource": {
                "resourceType": "MedicationRequest",
                "id": "ff6123985bd581b01e890d665af1dd3f",
                "meta": {
                    "versionId": "MTY0NTQ3OTI5ODY2NTgxMjAwMA",
                    "lastUpdated": "2022-02-21T21:34:58.665812+00:00",
                    "source": "gs://usmedpent-eds-qalan-cq/inbound/test/test_0220z/SPCLTY_PROVIDER.TCIA_CLNC_DOC.del.028.lob.Deid.xml.utf8.cqi.json",
                    "tag": [
                        {
                            "code": "CQ-CCDA"
                        }
                    ]
                },
                "identifier": [
                    {
                        "type": {
                            "coding": [
                                {
                                    "system": "urn:CQ-CCDA",
                                    "code": "CQ_CCDA",
                                    "display": "CQ CCDA"
                                }
                            ]
                        },
                        "system": "urn:CQ-CCDA",
                        "value": "695a0f45-7a78-4d7c-8718-29ffe9540a77"
                    }
                ],
                "status": "active",
                "intent": "plan",
                "medicationCodeableConcept": {
                    "coding": [
                        {
                            "system": "http://www.nlm.nih.gov/research/umls/rxnorm",
                            "code": "1653225",
                            "display": "Content Value with ID"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.88",
                            "code": "1653223",
                            "display": "1 ML etanercept 50 MG/ML Auto-Injector"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.69",
                            "code": "58406003204",
                            "display": "etanercept"
                        }
                    ],
                    "text": "Content Value with ID"
                },
                "subject": {
                    "reference": "Patient/607d1a67513568a2dbacc6f1d2e2cd30",
                    "type": "Patient"
                },
                "authoredOn": "2021-08-04T00:00:00+00:00",
                "requester": {
                    "reference": "Practitioner/591e787882e6a4d8061ac0e43c432f70",
                    "type": "Practitioner",
                    "display": "wUeZW7xykF4awP/zfRyKrxZRTZCadn8xdmYx1qQptPw= SdC5cHCo1PCR87TsuqOb1mptJc9NODhuK6o2NiA7z7s="
                },
                "performer": {
                    "reference": "Organization/f8bd0d498327f60790f78698823f4141",
                    "type": "Organization"
                },
                "dosageInstruction": [
                    {
                        "text": "Content Value with IDContent Value with ID",
                        "patientInstruction": "Content Value with ID"
                    }
                ],
                "dispenseRequest": {
                    "validityPeriod": {
                        "start": "2021-08-04T00:00:00+00:00"
                    }
                }
            },
            "search": {
                "mode": "match"
            }
        },
        {
            "fullUrl": "https://healthcare.googleapis.com/v1/projects/edp-qa-storage/locations/us/datasets/edp_ent_cdr_ods_qa_ds/fhirStores/edp_ent_cdr_fhir_ods_qa/fhir/MedicationRequest/8a0d648e2b685022c63c98345858f055",
            "resource": {
                "resourceType": "MedicationRequest",
                "id": "8a0d648e2b685022c63c98345858f055",
                "meta": {
                    "versionId": "MTY0NTQ3OTI5ODY2NTgxMjAwMA",
                    "lastUpdated": "2022-02-21T21:34:58.665812+00:00",
                    "source": "gs://usmedpent-eds-qalan-cq/inbound/test/test_0220z/SPCLTY_PROVIDER.TCIA_CLNC_DOC.del.028.lob.Deid.xml.utf8.cqi.json",
                    "tag": [
                        {
                            "code": "CQ-CCDA"
                        }
                    ]
                },
                "identifier": [
                    {
                        "type": {
                            "coding": [
                                {
                                    "system": "urn:CQ-CCDA",
                                    "code": "CQ_CCDA",
                                    "display": "CQ CCDA"
                                }
                            ]
                        },
                        "system": "urn:CQ-CCDA",
                        "value": "2b98492c-bd7a-469a-aa76-4aa54f145799"
                    }
                ],
                "status": "active",
                "intent": "plan",
                "medicationCodeableConcept": {
                    "coding": [
                        {
                            "system": "http://www.nlm.nih.gov/research/umls/rxnorm",
                            "code": "198641",
                            "display": "Content Value with ID"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.69",
                            "code": "00536384301",
                            "display": "folic acid"
                        }
                    ],
                    "text": "Content Value with ID"
                },
                "subject": {
                    "reference": "Patient/607d1a67513568a2dbacc6f1d2e2cd30",
                    "type": "Patient"
                },
                "requester": {
                    "reference": "Practitioner/591e787882e6a4d8061ac0e43c432f70",
                    "type": "Practitioner",
                    "display": "wUeZW7xykF4awP/zfRyKrxZRTZCadn8xdmYx1qQptPw= SdC5cHCo1PCR87TsuqOb1mptJc9NODhuK6o2NiA7z7s="
                },
                "performer": {
                    "reference": "Organization/f8bd0d498327f60790f78698823f4141",
                    "type": "Organization"
                },
                "dosageInstruction": [
                    {
                        "text": "Content Value with IDContent Value with ID",
                        "patientInstruction": "Content Value with ID",
                        "timing": {
                            "repeat": {
                                "frequency": 1,
                                "period": 2,
                                "periodUnit": "d"
                            }
                        },
                        "route": {
                            "coding": [
                                {
                                    "system": "http://snomed.info/sct",
                                    "code": "C38288",
                                    "display": "ORAL"
                                }
                            ]
                        },
                        "doseAndRate": [
                            {
                                "doseQuantity": {
                                    "value": 1,
                                    "unit": "{tbl}",
                                    "system": "http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm"
                                }
                            }
                        ]
                    }
                ]
            },
            "search": {
                "mode": "match"
            }
        },
        {
            "fullUrl": "https://healthcare.googleapis.com/v1/projects/edp-qa-storage/locations/us/datasets/edp_ent_cdr_ods_qa_ds/fhirStores/edp_ent_cdr_fhir_ods_qa/fhir/MedicationRequest/f86c1747662c75c769a8416573aa9723",
            "resource": {
                "resourceType": "MedicationRequest",
                "id": "f86c1747662c75c769a8416573aa9723",
                "meta": {
                    "versionId": "MTY0NTQ3OTI5ODY2NTgxMjAwMA",
                    "lastUpdated": "2022-02-21T21:34:58.665812+00:00",
                    "source": "gs://usmedpent-eds-qalan-cq/inbound/test/test_0220z/SPCLTY_PROVIDER.TCIA_CLNC_DOC.del.028.lob.Deid.xml.utf8.cqi.json",
                    "tag": [
                        {
                            "code": "CQ-CCDA"
                        }
                    ]
                },
                "identifier": [
                    {
                        "type": {
                            "coding": [
                                {
                                    "system": "urn:CQ-CCDA",
                                    "code": "CQ_CCDA",
                                    "display": "CQ CCDA"
                                }
                            ]
                        },
                        "system": "urn:CQ-CCDA",
                        "value": "bcc63c96-2de4-468e-9568-127ec85f2f54"
                    }
                ],
                "status": "active",
                "intent": "plan",
                "medicationCodeableConcept": {
                    "coding": [
                        {
                            "system": "http://www.nlm.nih.gov/research/umls/rxnorm",
                            "code": "1243440",
                            "display": "Content Value with ID"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.88",
                            "code": "1148399",
                            "display": "8 HR acetaminophen 650 MG Extended Release Oral Tablet"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.69",
                            "code": "00045083821",
                            "display": "acetaminophen"
                        }
                    ],
                    "text": "Content Value with ID"
                },
                "subject": {
                    "reference": "Patient/607d1a67513568a2dbacc6f1d2e2cd30",
                    "type": "Patient"
                },
                "requester": {
                    "reference": "Practitioner/591e787882e6a4d8061ac0e43c432f70",
                    "type": "Practitioner",
                    "display": "wUeZW7xykF4awP/zfRyKrxZRTZCadn8xdmYx1qQptPw= SdC5cHCo1PCR87TsuqOb1mptJc9NODhuK6o2NiA7z7s="
                },
                "performer": {
                    "reference": "Organization/f8bd0d498327f60790f78698823f4141",
                    "type": "Organization"
                },
                "dosageInstruction": [
                    {
                        "text": "Content Value with IDContent Value with ID",
                        "patientInstruction": "Content Value with ID",
                        "timing": {
                            "repeat": {
                                "frequency": 1,
                                "period": 8,
                                "periodUnit": "h"
                            }
                        },
                        "route": {
                            "coding": [
                                {
                                    "system": "http://snomed.info/sct",
                                    "code": "C38288",
                                    "display": "ORAL"
                                }
                            ]
                        },
                        "doseAndRate": [
                            {
                                "doseQuantity": {
                                    "value": 2,
                                    "unit": "{tbl}",
                                    "system": "http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm"
                                }
                            }
                        ]
                    }
                ]
            },
            "search": {
                "mode": "match"
            }
        },
        {
            "fullUrl": "https://healthcare.googleapis.com/v1/projects/edp-qa-storage/locations/us/datasets/edp_ent_cdr_ods_qa_ds/fhirStores/edp_ent_cdr_fhir_ods_qa/fhir/MedicationRequest/e5c19812e6286cf149eb6a5ffa47f67a",
            "resource": {
                "resourceType": "MedicationRequest",
                "id": "e5c19812e6286cf149eb6a5ffa47f67a",
                "meta": {
                    "versionId": "MTY0NTQ3OTI5ODY2NTgxMjAwMA",
                    "lastUpdated": "2022-02-21T21:34:58.665812+00:00",
                    "source": "gs://usmedpent-eds-qalan-cq/inbound/test/test_0220z/SPCLTY_PROVIDER.TCIA_CLNC_DOC.del.028.lob.Deid.xml.utf8.cqi.json",
                    "tag": [
                        {
                            "code": "CQ-CCDA"
                        }
                    ]
                },
                "identifier": [
                    {
                        "type": {
                            "coding": [
                                {
                                    "system": "urn:CQ-CCDA",
                                    "code": "CQ_CCDA",
                                    "display": "CQ CCDA"
                                }
                            ]
                        },
                        "system": "urn:CQ-CCDA",
                        "value": "f1c447d7-ca8b-47f0-946e-4a10aaf63fcd"
                    }
                ],
                "status": "active",
                "intent": "plan",
                "medicationCodeableConcept": {
                    "coding": [
                        {
                            "system": "http://www.nlm.nih.gov/research/umls/rxnorm",
                            "code": "105585",
                            "display": "Content Value with ID"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.69",
                            "code": "00054455015",
                            "display": "methotrexate sodium"
                        }
                    ],
                    "text": "Content Value with ID"
                },
                "subject": {
                    "reference": "Patient/607d1a67513568a2dbacc6f1d2e2cd30",
                    "type": "Patient"
                },
                "authoredOn": "2021-07-19T00:00:00+00:00",
                "requester": {
                    "reference": "Practitioner/591e787882e6a4d8061ac0e43c432f70",
                    "type": "Practitioner",
                    "display": "wUeZW7xykF4awP/zfRyKrxZRTZCadn8xdmYx1qQptPw= SdC5cHCo1PCR87TsuqOb1mptJc9NODhuK6o2NiA7z7s="
                },
                "performer": {
                    "reference": "Organization/f8bd0d498327f60790f78698823f4141",
                    "type": "Organization"
                },
                "dosageInstruction": [
                    {
                        "text": "Content Value with IDContent Value with ID",
                        "patientInstruction": "Content Value with ID",
                        "timing": {
                            "repeat": {
                                "frequency": 1,
                                "period": 1,
                                "periodUnit": "wk"
                            }
                        },
                        "route": {
                            "coding": [
                                {
                                    "system": "http://snomed.info/sct",
                                    "code": "C38288",
                                    "display": "ORAL"
                                }
                            ]
                        },
                        "doseAndRate": [
                            {
                                "doseQuantity": {
                                    "value": 8,
                                    "unit": "{tbl}",
                                    "system": "http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm"
                                }
                            }
                        ]
                    }
                ],
                "dispenseRequest": {
                    "validityPeriod": {
                        "start": "2021-07-19T00:00:00+00:00"
                    }
                }
            },
            "search": {
                "mode": "match"
            }
        },
        {
            "fullUrl": "https://healthcare.googleapis.com/v1/projects/edp-qa-storage/locations/us/datasets/edp_ent_cdr_ods_qa_ds/fhirStores/edp_ent_cdr_fhir_ods_qa/fhir/MedicationRequest/7d5aa9001463abeae26def75dcd65ff7",
            "resource": {
                "resourceType": "MedicationRequest",
                "id": "7d5aa9001463abeae26def75dcd65ff7",
                "meta": {
                    "versionId": "MTY0NTQzNzEyODM3MzM5NjAwMA",
                    "lastUpdated": "2022-02-21T09:52:08.373396+00:00",
                    "source": "gs://usmedpent-eds-qalan-cq/inbound/test/test_0220x/SPCLTY_PROVIDER.TCIA_CLNC_DOC.del.028.lob.Deid.xml.utf8.cqi.json",
                    "tag": [
                        {
                            "code": "CQ-CCDA"
                        }
                    ]
                },
                "identifier": [
                    {
                        "type": {
                            "coding": [
                                {
                                    "system": "urn:CQ-CCDA",
                                    "code": "CQ_CCDA",
                                    "display": "CQ CCDA"
                                }
                            ]
                        },
                        "system": "urn:CQ-CCDA",
                        "value": "0cf9ea28-65c9-43b1-8395-0d7ec6e12aeb"
                    }
                ],
                "status": "active",
                "intent": "plan",
                "medicationCodeableConcept": {
                    "coding": [
                        {
                            "system": "http://www.nlm.nih.gov/research/umls/rxnorm",
                            "code": "896245",
                            "display": "Content Value with ID"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.69",
                            "code": "00173071620",
                            "display": "fluticasone propion/salmeterol"
                        }
                    ],
                    "text": "Content Value with ID"
                },
                "subject": {
                    "reference": "Patient/607d1a67513568a2dbacc6f1d2e2cd30",
                    "type": "Patient"
                },
                "requester": {
                    "reference": "Practitioner/591e787882e6a4d8061ac0e43c432f70",
                    "type": "Practitioner",
                    "display": "wUeZW7xykF4awP/zfRyKrxZRTZCadn8xdmYx1qQptPw= SdC5cHCo1PCR87TsuqOb1mptJc9NODhuK6o2NiA7z7s="
                },
                "performer": {
                    "reference": "Organization/f8bd0d498327f60790f78698823f4141",
                    "type": "Organization"
                },
                "dosageInstruction": [
                    {
                        "text": "Content Value with ID",
                        "timing": {
                            "repeat": {
                                "frequency": 1,
                                "period": 12,
                                "periodUnit": "h"
                            }
                        },
                        "route": {
                            "coding": [
                                {
                                    "system": "http://snomed.info/sct",
                                    "code": "C38216",
                                    "display": "RESPIRATORY (INHALATION)"
                                }
                            ]
                        },
                        "doseAndRate": [
                            {
                                "doseQuantity": {
                                    "value": 1,
                                    "unit": "{puff}",
                                    "system": "http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm"
                                }
                            }
                        ]
                    }
                ]
            },
            "search": {
                "mode": "match"
            }
        },
        {
            "fullUrl": "https://healthcare.googleapis.com/v1/projects/edp-qa-storage/locations/us/datasets/edp_ent_cdr_ods_qa_ds/fhirStores/edp_ent_cdr_fhir_ods_qa/fhir/MedicationRequest/378f8b1d6ef08ce37ca3d4c2681154bc",
            "resource": {
                "resourceType": "MedicationRequest",
                "id": "378f8b1d6ef08ce37ca3d4c2681154bc",
                "meta": {
                    "versionId": "MTY0NTQzNzEyODM3MzM5NjAwMA",
                    "lastUpdated": "2022-02-21T09:52:08.373396+00:00",
                    "source": "gs://usmedpent-eds-qalan-cq/inbound/test/test_0220x/SPCLTY_PROVIDER.TCIA_CLNC_DOC.del.028.lob.Deid.xml.utf8.cqi.json",
                    "tag": [
                        {
                            "code": "CQ-CCDA"
                        }
                    ]
                },
                "identifier": [
                    {
                        "type": {
                            "coding": [
                                {
                                    "system": "urn:CQ-CCDA",
                                    "code": "CQ_CCDA",
                                    "display": "CQ CCDA"
                                }
                            ]
                        },
                        "system": "urn:CQ-CCDA",
                        "value": "bcc63c96-2de4-468e-9568-127ec85f2f54"
                    }
                ],
                "status": "active",
                "intent": "plan",
                "medicationCodeableConcept": {
                    "coding": [
                        {
                            "system": "http://www.nlm.nih.gov/research/umls/rxnorm",
                            "code": "1243440",
                            "display": "Content Value with ID"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.88",
                            "code": "1148399",
                            "display": "8 HR acetaminophen 650 MG Extended Release Oral Tablet"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.69",
                            "code": "00045083821",
                            "display": "acetaminophen"
                        }
                    ],
                    "text": "Content Value with ID"
                },
                "subject": {
                    "reference": "Patient/607d1a67513568a2dbacc6f1d2e2cd30",
                    "type": "Patient"
                },
                "requester": {
                    "reference": "Practitioner/591e787882e6a4d8061ac0e43c432f70",
                    "type": "Practitioner",
                    "display": "wUeZW7xykF4awP/zfRyKrxZRTZCadn8xdmYx1qQptPw= SdC5cHCo1PCR87TsuqOb1mptJc9NODhuK6o2NiA7z7s="
                },
                "performer": {
                    "reference": "Organization/f8bd0d498327f60790f78698823f4141",
                    "type": "Organization"
                },
                "dosageInstruction": [
                    {
                        "text": "Content Value with ID",
                        "timing": {
                            "repeat": {
                                "frequency": 1,
                                "period": 8,
                                "periodUnit": "h"
                            }
                        },
                        "route": {
                            "coding": [
                                {
                                    "system": "http://snomed.info/sct",
                                    "code": "C38288",
                                    "display": "ORAL"
                                }
                            ]
                        },
                        "doseAndRate": [
                            {
                                "doseQuantity": {
                                    "value": 2,
                                    "unit": "{tbl}",
                                    "system": "http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm"
                                }
                            }
                        ]
                    }
                ]
            },
            "search": {
                "mode": "match"
            }
        },
        {
            "fullUrl": "https://healthcare.googleapis.com/v1/projects/edp-qa-storage/locations/us/datasets/edp_ent_cdr_ods_qa_ds/fhirStores/edp_ent_cdr_fhir_ods_qa/fhir/MedicationRequest/a0f5ecf19930732b6e895161c4cb7585",
            "resource": {
                "resourceType": "MedicationRequest",
                "id": "a0f5ecf19930732b6e895161c4cb7585",
                "meta": {
                    "versionId": "MTY0NTQzNzEyODM3MzM5NjAwMA",
                    "lastUpdated": "2022-02-21T09:52:08.373396+00:00",
                    "source": "gs://usmedpent-eds-qalan-cq/inbound/test/test_0220x/SPCLTY_PROVIDER.TCIA_CLNC_DOC.del.028.lob.Deid.xml.utf8.cqi.json",
                    "tag": [
                        {
                            "code": "CQ-CCDA"
                        }
                    ]
                },
                "identifier": [
                    {
                        "type": {
                            "coding": [
                                {
                                    "system": "urn:CQ-CCDA",
                                    "code": "CQ_CCDA",
                                    "display": "CQ CCDA"
                                }
                            ]
                        },
                        "system": "urn:CQ-CCDA",
                        "value": "2bf090ca-8b8a-4c3c-a47e-af01cdec203b"
                    }
                ],
                "status": "active",
                "intent": "plan",
                "medicationCodeableConcept": {
                    "coding": [
                        {
                            "system": "http://www.nlm.nih.gov/research/umls/rxnorm",
                            "code": "153892",
                            "display": "Content Value with ID"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.88",
                            "code": "200224",
                            "display": "montelukast 10 MG Oral Tablet"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.69",
                            "code": "00006911731",
                            "display": "montelukast sodium"
                        }
                    ],
                    "text": "Content Value with ID"
                },
                "subject": {
                    "reference": "Patient/607d1a67513568a2dbacc6f1d2e2cd30",
                    "type": "Patient"
                },
                "requester": {
                    "reference": "Practitioner/591e787882e6a4d8061ac0e43c432f70",
                    "type": "Practitioner",
                    "display": "wUeZW7xykF4awP/zfRyKrxZRTZCadn8xdmYx1qQptPw= SdC5cHCo1PCR87TsuqOb1mptJc9NODhuK6o2NiA7z7s="
                },
                "performer": {
                    "reference": "Organization/f8bd0d498327f60790f78698823f4141",
                    "type": "Organization"
                },
                "dosageInstruction": [
                    {
                        "text": "Content Value with ID",
                        "timing": {
                            "repeat": {
                                "frequency": 1,
                                "period": 1,
                                "periodUnit": "d"
                            }
                        },
                        "route": {
                            "coding": [
                                {
                                    "system": "http://snomed.info/sct",
                                    "code": "C38288",
                                    "display": "ORAL"
                                }
                            ]
                        },
                        "doseAndRate": [
                            {
                                "doseQuantity": {
                                    "value": 1,
                                    "unit": "{tbl}",
                                    "system": "http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm"
                                }
                            }
                        ]
                    }
                ]
            },
            "search": {
                "mode": "match"
            }
        },
        {
            "fullUrl": "https://healthcare.googleapis.com/v1/projects/edp-qa-storage/locations/us/datasets/edp_ent_cdr_ods_qa_ds/fhirStores/edp_ent_cdr_fhir_ods_qa/fhir/MedicationRequest/ef5e3dc78e7f2c345c03ae9b9ca29fdf",
            "resource": {
                "resourceType": "MedicationRequest",
                "id": "ef5e3dc78e7f2c345c03ae9b9ca29fdf",
                "meta": {
                    "versionId": "MTY0NTQzNzEyODM3MzM5NjAwMA",
                    "lastUpdated": "2022-02-21T09:52:08.373396+00:00",
                    "source": "gs://usmedpent-eds-qalan-cq/inbound/test/test_0220x/SPCLTY_PROVIDER.TCIA_CLNC_DOC.del.028.lob.Deid.xml.utf8.cqi.json",
                    "tag": [
                        {
                            "code": "CQ-CCDA"
                        }
                    ]
                },
                "identifier": [
                    {
                        "type": {
                            "coding": [
                                {
                                    "system": "urn:CQ-CCDA",
                                    "code": "CQ_CCDA",
                                    "display": "CQ CCDA"
                                }
                            ]
                        },
                        "system": "urn:CQ-CCDA",
                        "value": "e664cf7c-42b4-45e2-a2dd-585b19d4cae8"
                    }
                ],
                "status": "active",
                "intent": "plan",
                "medicationCodeableConcept": {
                    "coding": [
                        {
                            "system": "http://www.nlm.nih.gov/research/umls/rxnorm",
                            "code": "729931",
                            "display": "Content Value with ID"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.88",
                            "code": "313581",
                            "display": "24 HR venlafaxine 150 MG Extended Release Oral Capsule"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.69",
                            "code": "00008083620",
                            "display": "venlafaxine HCl"
                        }
                    ],
                    "text": "Content Value with ID"
                },
                "subject": {
                    "reference": "Patient/607d1a67513568a2dbacc6f1d2e2cd30",
                    "type": "Patient"
                },
                "requester": {
                    "reference": "Practitioner/591e787882e6a4d8061ac0e43c432f70",
                    "type": "Practitioner",
                    "display": "wUeZW7xykF4awP/zfRyKrxZRTZCadn8xdmYx1qQptPw= SdC5cHCo1PCR87TsuqOb1mptJc9NODhuK6o2NiA7z7s="
                },
                "performer": {
                    "reference": "Organization/f8bd0d498327f60790f78698823f4141",
                    "type": "Organization"
                },
                "dosageInstruction": [
                    {
                        "text": "Content Value with ID",
                        "timing": {
                            "repeat": {
                                "frequency": 1,
                                "period": 1,
                                "periodUnit": "d"
                            }
                        },
                        "route": {
                            "coding": [
                                {
                                    "system": "http://snomed.info/sct",
                                    "code": "C38288",
                                    "display": "ORAL"
                                }
                            ]
                        },
                        "doseAndRate": [
                            {
                                "doseQuantity": {
                                    "value": 1,
                                    "unit": "{capsule}",
                                    "system": "http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm"
                                }
                            }
                        ]
                    }
                ]
            },
            "search": {
                "mode": "match"
            }
        },
        {
            "fullUrl": "https://healthcare.googleapis.com/v1/projects/edp-qa-storage/locations/us/datasets/edp_ent_cdr_ods_qa_ds/fhirStores/edp_ent_cdr_fhir_ods_qa/fhir/MedicationRequest/e1b68a31eb3bb8d9f98cd1ba97b784ac",
            "resource": {
                "resourceType": "MedicationRequest",
                "id": "e1b68a31eb3bb8d9f98cd1ba97b784ac",
                "meta": {
                    "versionId": "MTY0NTQzNzEyODM3MzM5NjAwMA",
                    "lastUpdated": "2022-02-21T09:52:08.373396+00:00",
                    "source": "gs://usmedpent-eds-qalan-cq/inbound/test/test_0220x/SPCLTY_PROVIDER.TCIA_CLNC_DOC.del.028.lob.Deid.xml.utf8.cqi.json",
                    "tag": [
                        {
                            "code": "CQ-CCDA"
                        }
                    ]
                },
                "identifier": [
                    {
                        "type": {
                            "coding": [
                                {
                                    "system": "urn:CQ-CCDA",
                                    "code": "CQ_CCDA",
                                    "display": "CQ CCDA"
                                }
                            ]
                        },
                        "system": "urn:CQ-CCDA",
                        "value": "695a0f45-7a78-4d7c-8718-29ffe9540a77"
                    }
                ],
                "status": "active",
                "intent": "plan",
                "medicationCodeableConcept": {
                    "coding": [
                        {
                            "system": "http://www.nlm.nih.gov/research/umls/rxnorm",
                            "code": "1653225",
                            "display": "Content Value with ID"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.88",
                            "code": "1653223",
                            "display": "1 ML etanercept 50 MG/ML Auto-Injector"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.69",
                            "code": "58406003204",
                            "display": "etanercept"
                        }
                    ],
                    "text": "Content Value with ID"
                },
                "subject": {
                    "reference": "Patient/607d1a67513568a2dbacc6f1d2e2cd30",
                    "type": "Patient"
                },
                "authoredOn": "2021-08-04T00:00:00+00:00",
                "requester": {
                    "reference": "Practitioner/591e787882e6a4d8061ac0e43c432f70",
                    "type": "Practitioner",
                    "display": "wUeZW7xykF4awP/zfRyKrxZRTZCadn8xdmYx1qQptPw= SdC5cHCo1PCR87TsuqOb1mptJc9NODhuK6o2NiA7z7s="
                },
                "performer": {
                    "reference": "Organization/f8bd0d498327f60790f78698823f4141",
                    "type": "Organization"
                },
                "dosageInstruction": [
                    {
                        "text": "Content Value with ID"
                    }
                ],
                "dispenseRequest": {
                    "validityPeriod": {
                        "start": "2021-08-04T00:00:00+00:00"
                    }
                }
            },
            "search": {
                "mode": "match"
            }
        },
        {
            "fullUrl": "https://healthcare.googleapis.com/v1/projects/edp-qa-storage/locations/us/datasets/edp_ent_cdr_ods_qa_ds/fhirStores/edp_ent_cdr_fhir_ods_qa/fhir/MedicationRequest/c09ff9957cdae620c2ef0f0081b8c779",
            "resource": {
                "resourceType": "MedicationRequest",
                "id": "c09ff9957cdae620c2ef0f0081b8c779",
                "meta": {
                    "versionId": "MTY0NTQzNzEyODM3MzM5NjAwMA",
                    "lastUpdated": "2022-02-21T09:52:08.373396+00:00",
                    "source": "gs://usmedpent-eds-qalan-cq/inbound/test/test_0220x/SPCLTY_PROVIDER.TCIA_CLNC_DOC.del.028.lob.Deid.xml.utf8.cqi.json",
                    "tag": [
                        {
                            "code": "CQ-CCDA"
                        }
                    ]
                },
                "identifier": [
                    {
                        "type": {
                            "coding": [
                                {
                                    "system": "urn:CQ-CCDA",
                                    "code": "CQ_CCDA",
                                    "display": "CQ CCDA"
                                }
                            ]
                        },
                        "system": "urn:CQ-CCDA",
                        "value": "02ff0cc0-c95b-4f22-b8c9-aaff388f68a4"
                    }
                ],
                "status": "active",
                "intent": "plan",
                "medicationCodeableConcept": {
                    "coding": [
                        {
                            "system": "http://www.nlm.nih.gov/research/umls/rxnorm",
                            "code": "310798",
                            "display": "Content Value with ID"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.69",
                            "code": "00172208360",
                            "display": "hydrochlorothiazide"
                        }
                    ],
                    "text": "Content Value with ID"
                },
                "subject": {
                    "reference": "Patient/607d1a67513568a2dbacc6f1d2e2cd30",
                    "type": "Patient"
                },
                "requester": {
                    "reference": "Practitioner/591e787882e6a4d8061ac0e43c432f70",
                    "type": "Practitioner",
                    "display": "wUeZW7xykF4awP/zfRyKrxZRTZCadn8xdmYx1qQptPw= SdC5cHCo1PCR87TsuqOb1mptJc9NODhuK6o2NiA7z7s="
                },
                "performer": {
                    "reference": "Organization/f8bd0d498327f60790f78698823f4141",
                    "type": "Organization"
                },
                "dosageInstruction": [
                    {
                        "text": "Content Value with ID",
                        "timing": {
                            "repeat": {
                                "frequency": 1,
                                "period": 1,
                                "periodUnit": "d"
                            }
                        },
                        "route": {
                            "coding": [
                                {
                                    "system": "http://snomed.info/sct",
                                    "code": "C38288",
                                    "display": "ORAL"
                                }
                            ]
                        },
                        "doseAndRate": [
                            {
                                "doseQuantity": {
                                    "value": 1,
                                    "unit": "{tbl}",
                                    "system": "http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm"
                                }
                            }
                        ]
                    }
                ]
            },
            "search": {
                "mode": "match"
            }
        },
        {
            "fullUrl": "https://healthcare.googleapis.com/v1/projects/edp-qa-storage/locations/us/datasets/edp_ent_cdr_ods_qa_ds/fhirStores/edp_ent_cdr_fhir_ods_qa/fhir/MedicationRequest/31fbbd2a4d481f96471a679716b4f48f",
            "resource": {
                "resourceType": "MedicationRequest",
                "id": "31fbbd2a4d481f96471a679716b4f48f",
                "meta": {
                    "versionId": "MTY0NTQzNzEyODM3MzM5NjAwMA",
                    "lastUpdated": "2022-02-21T09:52:08.373396+00:00",
                    "source": "gs://usmedpent-eds-qalan-cq/inbound/test/test_0220x/SPCLTY_PROVIDER.TCIA_CLNC_DOC.del.028.lob.Deid.xml.utf8.cqi.json",
                    "tag": [
                        {
                            "code": "CQ-CCDA"
                        }
                    ]
                },
                "identifier": [
                    {
                        "type": {
                            "coding": [
                                {
                                    "system": "urn:CQ-CCDA",
                                    "code": "CQ_CCDA",
                                    "display": "CQ CCDA"
                                }
                            ]
                        },
                        "system": "urn:CQ-CCDA",
                        "value": "2b98492c-bd7a-469a-aa76-4aa54f145799"
                    }
                ],
                "status": "active",
                "intent": "plan",
                "medicationCodeableConcept": {
                    "coding": [
                        {
                            "system": "http://www.nlm.nih.gov/research/umls/rxnorm",
                            "code": "198641",
                            "display": "Content Value with ID"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.69",
                            "code": "00536384301",
                            "display": "folic acid"
                        }
                    ],
                    "text": "Content Value with ID"
                },
                "subject": {
                    "reference": "Patient/607d1a67513568a2dbacc6f1d2e2cd30",
                    "type": "Patient"
                },
                "requester": {
                    "reference": "Practitioner/591e787882e6a4d8061ac0e43c432f70",
                    "type": "Practitioner",
                    "display": "wUeZW7xykF4awP/zfRyKrxZRTZCadn8xdmYx1qQptPw= SdC5cHCo1PCR87TsuqOb1mptJc9NODhuK6o2NiA7z7s="
                },
                "performer": {
                    "reference": "Organization/f8bd0d498327f60790f78698823f4141",
                    "type": "Organization"
                },
                "dosageInstruction": [
                    {
                        "text": "Content Value with ID",
                        "timing": {
                            "repeat": {
                                "frequency": 1,
                                "period": 2,
                                "periodUnit": "d"
                            }
                        },
                        "route": {
                            "coding": [
                                {
                                    "system": "http://snomed.info/sct",
                                    "code": "C38288",
                                    "display": "ORAL"
                                }
                            ]
                        },
                        "doseAndRate": [
                            {
                                "doseQuantity": {
                                    "value": 1,
                                    "unit": "{tbl}",
                                    "system": "http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm"
                                }
                            }
                        ]
                    }
                ]
            },
            "search": {
                "mode": "match"
            }
        },
        {
            "fullUrl": "https://healthcare.googleapis.com/v1/projects/edp-qa-storage/locations/us/datasets/edp_ent_cdr_ods_qa_ds/fhirStores/edp_ent_cdr_fhir_ods_qa/fhir/MedicationRequest/2731f248f5f149f015f795a97215b541",
            "resource": {
                "resourceType": "MedicationRequest",
                "id": "2731f248f5f149f015f795a97215b541",
                "meta": {
                    "versionId": "MTY0NTQzNzEyODM3MzM5NjAwMA",
                    "lastUpdated": "2022-02-21T09:52:08.373396+00:00",
                    "source": "gs://usmedpent-eds-qalan-cq/inbound/test/test_0220x/SPCLTY_PROVIDER.TCIA_CLNC_DOC.del.028.lob.Deid.xml.utf8.cqi.json",
                    "tag": [
                        {
                            "code": "CQ-CCDA"
                        }
                    ]
                },
                "identifier": [
                    {
                        "type": {
                            "coding": [
                                {
                                    "system": "urn:CQ-CCDA",
                                    "code": "CQ_CCDA",
                                    "display": "CQ CCDA"
                                }
                            ]
                        },
                        "system": "urn:CQ-CCDA",
                        "value": "d3b0668a-b42f-4f0a-b5b2-801a4e55a353"
                    }
                ],
                "status": "active",
                "intent": "plan",
                "medicationCodeableConcept": {
                    "coding": [
                        {
                            "system": "http://www.nlm.nih.gov/research/umls/rxnorm",
                            "code": "200329",
                            "display": "Content Value with ID"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.69",
                            "code": "00093529410",
                            "display": "omeprazole"
                        }
                    ],
                    "text": "Content Value with ID"
                },
                "subject": {
                    "reference": "Patient/607d1a67513568a2dbacc6f1d2e2cd30",
                    "type": "Patient"
                },
                "requester": {
                    "reference": "Practitioner/591e787882e6a4d8061ac0e43c432f70",
                    "type": "Practitioner",
                    "display": "wUeZW7xykF4awP/zfRyKrxZRTZCadn8xdmYx1qQptPw= SdC5cHCo1PCR87TsuqOb1mptJc9NODhuK6o2NiA7z7s="
                },
                "performer": {
                    "reference": "Organization/f8bd0d498327f60790f78698823f4141",
                    "type": "Organization"
                },
                "dosageInstruction": [
                    {
                        "text": "Content Value with ID",
                        "timing": {
                            "repeat": {
                                "frequency": 1,
                                "period": 1,
                                "periodUnit": "d"
                            }
                        },
                        "route": {
                            "coding": [
                                {
                                    "system": "http://snomed.info/sct",
                                    "code": "C38288",
                                    "display": "ORAL"
                                }
                            ]
                        },
                        "doseAndRate": [
                            {
                                "doseQuantity": {
                                    "value": 1,
                                    "unit": "{capsule}",
                                    "system": "http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm"
                                }
                            }
                        ]
                    }
                ]
            },
            "search": {
                "mode": "match"
            }
        },
        {
            "fullUrl": "https://healthcare.googleapis.com/v1/projects/edp-qa-storage/locations/us/datasets/edp_ent_cdr_ods_qa_ds/fhirStores/edp_ent_cdr_fhir_ods_qa/fhir/MedicationRequest/6ac1480c8a9577174f9a18c056ab1cc0",
            "resource": {
                "resourceType": "MedicationRequest",
                "id": "6ac1480c8a9577174f9a18c056ab1cc0",
                "meta": {
                    "versionId": "MTY0NTQzNzEyODM3MzM5NjAwMA",
                    "lastUpdated": "2022-02-21T09:52:08.373396+00:00",
                    "source": "gs://usmedpent-eds-qalan-cq/inbound/test/test_0220x/SPCLTY_PROVIDER.TCIA_CLNC_DOC.del.028.lob.Deid.xml.utf8.cqi.json",
                    "tag": [
                        {
                            "code": "CQ-CCDA"
                        }
                    ]
                },
                "identifier": [
                    {
                        "type": {
                            "coding": [
                                {
                                    "system": "urn:CQ-CCDA",
                                    "code": "CQ_CCDA",
                                    "display": "CQ CCDA"
                                }
                            ]
                        },
                        "system": "urn:CQ-CCDA",
                        "value": "4ae149e0-e378-47ea-acf1-774c5e360280"
                    }
                ],
                "status": "active",
                "intent": "plan",
                "medicationCodeableConcept": {
                    "coding": [
                        {
                            "system": "http://www.nlm.nih.gov/research/umls/rxnorm",
                            "code": "152695",
                            "display": "Content Value with ID"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.69",
                            "code": "29300012501",
                            "display": "meloxicam"
                        }
                    ],
                    "text": "Content Value with ID"
                },
                "subject": {
                    "reference": "Patient/607d1a67513568a2dbacc6f1d2e2cd30",
                    "type": "Patient"
                },
                "authoredOn": "2021-07-19T00:00:00+00:00",
                "requester": {
                    "reference": "Practitioner/591e787882e6a4d8061ac0e43c432f70",
                    "type": "Practitioner",
                    "display": "wUeZW7xykF4awP/zfRyKrxZRTZCadn8xdmYx1qQptPw= SdC5cHCo1PCR87TsuqOb1mptJc9NODhuK6o2NiA7z7s="
                },
                "performer": {
                    "reference": "Organization/f8bd0d498327f60790f78698823f4141",
                    "type": "Organization"
                },
                "dosageInstruction": [
                    {
                        "text": "Content Value with ID",
                        "timing": {
                            "repeat": {
                                "frequency": 1,
                                "period": 1,
                                "periodUnit": "d"
                            }
                        },
                        "route": {
                            "coding": [
                                {
                                    "system": "http://snomed.info/sct",
                                    "code": "C38288",
                                    "display": "ORAL"
                                }
                            ]
                        },
                        "doseAndRate": [
                            {
                                "doseQuantity": {
                                    "value": 1,
                                    "unit": "{tbl}",
                                    "system": "http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm"
                                }
                            }
                        ]
                    }
                ],
                "dispenseRequest": {
                    "validityPeriod": {
                        "start": "2021-07-19T00:00:00+00:00"
                    }
                }
            },
            "search": {
                "mode": "match"
            }
        },
        {
            "fullUrl": "https://healthcare.googleapis.com/v1/projects/edp-qa-storage/locations/us/datasets/edp_ent_cdr_ods_qa_ds/fhirStores/edp_ent_cdr_fhir_ods_qa/fhir/MedicationRequest/1c8822469105e98785a3f88333592fd3",
            "resource": {
                "resourceType": "MedicationRequest",
                "id": "1c8822469105e98785a3f88333592fd3",
                "meta": {
                    "versionId": "MTY0NTQzNzEyODM3MzM5NjAwMA",
                    "lastUpdated": "2022-02-21T09:52:08.373396+00:00",
                    "source": "gs://usmedpent-eds-qalan-cq/inbound/test/test_0220x/SPCLTY_PROVIDER.TCIA_CLNC_DOC.del.028.lob.Deid.xml.utf8.cqi.json",
                    "tag": [
                        {
                            "code": "CQ-CCDA"
                        }
                    ]
                },
                "identifier": [
                    {
                        "type": {
                            "coding": [
                                {
                                    "system": "urn:CQ-CCDA",
                                    "code": "CQ_CCDA",
                                    "display": "CQ CCDA"
                                }
                            ]
                        },
                        "system": "urn:CQ-CCDA",
                        "value": "f1c447d7-ca8b-47f0-946e-4a10aaf63fcd"
                    }
                ],
                "status": "active",
                "intent": "plan",
                "medicationCodeableConcept": {
                    "coding": [
                        {
                            "system": "http://www.nlm.nih.gov/research/umls/rxnorm",
                            "code": "105585",
                            "display": "Content Value with ID"
                        },
                        {
                            "system": "urn:oid:2.16.840.1.113883.6.69",
                            "code": "00054455015",
                            "display": "methotrexate sodium"
                        }
                    ],
                    "text": "Content Value with ID"
                },
                "subject": {
                    "reference": "Patient/607d1a67513568a2dbacc6f1d2e2cd30",
                    "type": "Patient"
                },
                "authoredOn": "2021-07-19T00:00:00+00:00",
                "requester": {
                    "reference": "Practitioner/591e787882e6a4d8061ac0e43c432f70",
                    "type": "Practitioner",
                    "display": "wUeZW7xykF4awP/zfRyKrxZRTZCadn8xdmYx1qQptPw= SdC5cHCo1PCR87TsuqOb1mptJc9NODhuK6o2NiA7z7s="
                },
                "performer": {
                    "reference": "Organization/f8bd0d498327f60790f78698823f4141",
                    "type": "Organization"
                },
                "dosageInstruction": [
                    {
                        "text": "Content Value with ID",
                        "timing": {
                            "repeat": {
                                "frequency": 1,
                                "period": 1,
                                "periodUnit": "wk"
                            }
                        },
                        "route": {
                            "coding": [
                                {
                                    "system": "http://snomed.info/sct",
                                    "code": "C38288",
                                    "display": "ORAL"
                                }
                            ]
                        },
                        "doseAndRate": [
                            {
                                "doseQuantity": {
                                    "value": 8,
                                    "unit": "{tbl}",
                                    "system": "http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm"
                                }
                            }
                        ]
                    }
                ],
                "dispenseRequest": {
                    "validityPeriod": {
                        "start": "2021-07-19T00:00:00+00:00"
                    }
                }
            },
            "search": {
                "mode": "match"
            }
        }
    ]
}</con:responseContent><con:header><con:name>Access-Control-Allow-Origin</con:name><con:value>*</con:value></con:header><con:header><con:name>Access-Control-Allow-Methods</con:name><con:value>POST, GET, OPTIONS, DELETE</con:value></con:header><con:header><con:name>Access-Control-Allow-Headers</con:name><con:value>x-requested-with, Content-type, x-correlationid, verification-token, appname </con:value></con:header></con:response></con:restMockAction><con:restMockAction name="patientSummary/progressNotes" method="OPTIONS" resourcePath="/patientSummary/progressNotes" id="41cff18e-8990-41d0-b17c-a526bb749c8f"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*&#13;
// Script dispatcher is used to select a response based on the incoming request.&#13;
// Here are few examples showing how to match based on path, query param, header and body&#13;
&#13;
// Match based on path&#13;
def requestPath = mockRequest.getPath()&#13;
log.info "Path: "+ requestPath&#13;
&#13;
if( requestPath.contains("json") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "JSON Response"&#13;
}&#13;
&#13;
&#13;
// Match based on query parameter&#13;
def queryString = mockRequest.getRequest().getQueryString()&#13;
log.info "QueryString: " + queryString&#13;
&#13;
if( queryString.contains("stockholm") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response Stockholm"&#13;
}&#13;
else if( queryString.contains("london") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response London"&#13;
}&#13;
&#13;
&#13;
// Match based on header&#13;
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")&#13;
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList&#13;
&#13;
if( acceptEncodingHeaderList.contains("gzip,deflate") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "GZiped Response"&#13;
}&#13;
&#13;
&#13;
// Match based on body&#13;
def requestBody = mockRequest.getRequestContent()&#13;
log.info "Request body: " + requestBody&#13;
&#13;
if( requestBody.contains("some data") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response N"&#13;
}&#13;
*/&#13;
</con:dispatchPath><con:response name="Response 1" id="ef749d21-2cd9-4c89-9291-8d96424e3f8a" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent/><con:header><con:name>Access-Control-Allow-Origin</con:name><con:value>*</con:value></con:header><con:header><con:name>Access-Control-Allow-Methods</con:name><con:value>POST, GET, OPTIONS, DELETE</con:value></con:header><con:header><con:name>Access-Control-Allow-Headers</con:name><con:value>x-requested-with, Content-type, x-correlationid, verification-token, appname </con:value></con:header></con:response></con:restMockAction><con:restMockAction name="patientSummary/progressNotes" method="POST" resourcePath="/patientSummary/progressNotes" id="ec25d5d3-0e85-4ac0-8eca-96f892c0d1fe"><con:settings/><con:defaultResponse>Response 2</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*&#13;
// Script dispatcher is used to select a response based on the incoming request.&#13;
// Here are few examples showing how to match based on path, query param, header and body&#13;
&#13;
// Match based on path&#13;
def requestPath = mockRequest.getPath()&#13;
log.info "Path: "+ requestPath&#13;
&#13;
if( requestPath.contains("json") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "JSON Response"&#13;
}&#13;
&#13;
&#13;
// Match based on query parameter&#13;
def queryString = mockRequest.getRequest().getQueryString()&#13;
log.info "QueryString: " + queryString&#13;
&#13;
if( queryString.contains("stockholm") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response Stockholm"&#13;
}&#13;
else if( queryString.contains("london") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response London"&#13;
}&#13;
&#13;
&#13;
// Match based on header&#13;
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")&#13;
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList&#13;
&#13;
if( acceptEncodingHeaderList.contains("gzip,deflate") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "GZiped Response"&#13;
}&#13;
&#13;
&#13;
// Match based on body&#13;
def requestBody = mockRequest.getRequestContent()&#13;
log.info "Request body: " + requestBody&#13;
&#13;
if( requestBody.contains("some data") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response N"&#13;
}&#13;
*/&#13;
</con:dispatchPath><con:response name="Response 2" id="4225625e-80a2-497f-9be8-a2b1a9e13882" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
    "response": {
        "resources": [
            {
                "encounterType": null,
                "encounterDate": "2020-08-06T15:00:00.000+00:00",
                "prescriber": {
                    "firstName": "wUeZW7xykF4awP/zfRyKrxZRTZCadn8xdmYx1qQptPw=",
                    "lastName": "SdC5cHCo1PCR87TsuqOb1mptJc9NODhuK6o2NiA7z7s="
                },
                "institutionName": null,
                "speciality": null,
                "description": null,
                "notes": null,
                "documentRef": "123"
            },
            {
                "encounterType": null,
                "encounterDate": "2021-03-04T13:45:00.000+00:00",
                "prescriber": {
                    "firstName": "3m+V5gyMdItkHCkKR1u62c2S0D9O+XFdWy7/5kXxDbk=",
                    "lastName": "m3DrSRomw5HjiztkOb4dBrZT4Zn71gbNGOLl/f54o7g="
                },
                "institutionName": null,
                "speciality": null,
                "description": null,
                "notes": null,
                "documentRef": "123"
            },
            {
                "encounterType": null,
                "encounterDate": "2020-11-16T15:00:00.000+00:00",
                "prescriber": {
                    "firstName": "wUeZW7xykF4awP/zfRyKrxZRTZCadn8xdmYx1qQptPw=",
                    "lastName": "SdC5cHCo1PCR87TsuqOb1mptJc9NODhuK6o2NiA7z7s="
                },
                "institutionName": null,
                "speciality": null,
                "description": null,
                "notes": null,
                "documentRef": "123"
            },
            {
                "encounterType": null,
                "encounterDate": "2021-08-04T09:46:00.000+00:00",
                "prescriber": {
                    "firstName": "wUeZW7xykF4awP/zfRyKrxZRTZCadn8xdmYx1qQptPw=",
                    "lastName": "SdC5cHCo1PCR87TsuqOb1mptJc9NODhuK6o2NiA7z7s="
                },
                "institutionName": null,
                "speciality": null,
                "description": null,
                "notes": null,
                "documentRef": null
            },
            {
                "encounterType": null,
                "encounterDate": "2021-07-19T13:30:00.000+00:00",
                "prescriber": {
                    "firstName": "wUeZW7xykF4awP/zfRyKrxZRTZCadn8xdmYx1qQptPw=",
                    "lastName": "SdC5cHCo1PCR87TsuqOb1mptJc9NODhuK6o2NiA7z7s="
                },
                "institutionName": null,
                "speciality": null,
                "description": null,
                "notes": null,
                "documentRef": null
            },
            {
                "encounterType": null,
                "encounterDate": "2020-08-04T12:14:00.000+00:00",
                "prescriber": {
                    "firstName": "wUeZW7xykF4awP/zfRyKrxZRTZCadn8xdmYx1qQptPw=",
                    "lastName": "SdC5cHCo1PCR87TsuqOb1mptJc9NODhuK6o2NiA7z7s="
                },
                "institutionName": null,
                "speciality": null,
                "description": null,
                "notes": null,
                "documentRef": null
            },
            {
                "encounterType": null,
                "encounterDate": "2020-08-10T08:45:00.000+00:00",
                "prescriber": {
                    "firstName": "wUeZW7xykF4awP/zfRyKrxZRTZCadn8xdmYx1qQptPw=",
                    "lastName": "SdC5cHCo1PCR87TsuqOb1mptJc9NODhuK6o2NiA7z7s="
                },
                "institutionName": null,
                "speciality": null,
                "description": null,
                "notes": null,
                "documentRef": null
            },
            {
                "encounterType": null,
                "encounterDate": "2021-01-20T13:00:00.000+00:00",
                "prescriber": {
                    "firstName": "wUeZW7xykF4awP/zfRyKrxZRTZCadn8xdmYx1qQptPw=",
                    "lastName": "SdC5cHCo1PCR87TsuqOb1mptJc9NODhuK6o2NiA7z7s="
                },
                "institutionName": null,
                "speciality": null,
                "description": null,
                "notes": null,
                "documentRef": null
            }
        ],
        "statusDesc": null,
        "statusCode": "0000",
        "requestedBy": "test"
    }
}</con:responseContent><con:header><con:name>Access-Control-Allow-Origin</con:name><con:value>*</con:value></con:header><con:header><con:name>Access-Control-Allow-Methods</con:name><con:value>POST, GET, OPTIONS, DELETE</con:value></con:header><con:header><con:name>Access-Control-Allow-Headers</con:name><con:value>x-requested-with, Content-type, x-correlationid, verification-token, appname </con:value></con:header></con:response></con:restMockAction><con:restMockAction name="patientSummary/docRef" method="OPTIONS" resourcePath="/patientSummary/docRef" id="7d3ce413-245f-4632-ad5d-213abe260ca2"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*&#13;
// Script dispatcher is used to select a response based on the incoming request.&#13;
// Here are few examples showing how to match based on path, query param, header and body&#13;
&#13;
// Match based on path&#13;
def requestPath = mockRequest.getPath()&#13;
log.info "Path: "+ requestPath&#13;
&#13;
if( requestPath.contains("json") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "JSON Response"&#13;
}&#13;
&#13;
&#13;
// Match based on query parameter&#13;
def queryString = mockRequest.getRequest().getQueryString()&#13;
log.info "QueryString: " + queryString&#13;
&#13;
if( queryString.contains("stockholm") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response Stockholm"&#13;
}&#13;
else if( queryString.contains("london") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response London"&#13;
}&#13;
&#13;
&#13;
// Match based on header&#13;
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")&#13;
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList&#13;
&#13;
if( acceptEncodingHeaderList.contains("gzip,deflate") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "GZiped Response"&#13;
}&#13;
&#13;
&#13;
// Match based on body&#13;
def requestBody = mockRequest.getRequestContent()&#13;
log.info "Request body: " + requestBody&#13;
&#13;
if( requestBody.contains("some data") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response N"&#13;
}&#13;
*/&#13;
</con:dispatchPath><con:response name="Response 1" id="6cbbf751-598c-438c-a2d0-d26ebd4f6fcf" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent/><con:header><con:name>Access-Control-Allow-Origin</con:name><con:value>*</con:value></con:header><con:header><con:name>Access-Control-Allow-Methods</con:name><con:value>POST, GET, OPTIONS, DELETE</con:value></con:header><con:header><con:name>Access-Control-Allow-Headers</con:name><con:value>x-requested-with, Content-type, x-correlationid, verification-token, appname </con:value></con:header></con:response></con:restMockAction><con:restMockAction name="patientSummary/docRef" method="POST" resourcePath="/patientSummary/docRef" id="9374e210-72c3-4c27-84eb-54b07e60d9ea"><con:settings/><con:defaultResponse>Response 2</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*&#13;
// Script dispatcher is used to select a response based on the incoming request.&#13;
// Here are few examples showing how to match based on path, query param, header and body&#13;
&#13;
// Match based on path&#13;
def requestPath = mockRequest.getPath()&#13;
log.info "Path: "+ requestPath&#13;
&#13;
if( requestPath.contains("json") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "JSON Response"&#13;
}&#13;
&#13;
&#13;
// Match based on query parameter&#13;
def queryString = mockRequest.getRequest().getQueryString()&#13;
log.info "QueryString: " + queryString&#13;
&#13;
if( queryString.contains("stockholm") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response Stockholm"&#13;
}&#13;
else if( queryString.contains("london") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response London"&#13;
}&#13;
&#13;
&#13;
// Match based on header&#13;
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")&#13;
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList&#13;
&#13;
if( acceptEncodingHeaderList.contains("gzip,deflate") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "GZiped Response"&#13;
}&#13;
&#13;
&#13;
// Match based on body&#13;
def requestBody = mockRequest.getRequestContent()&#13;
log.info "Request body: " + requestBody&#13;
&#13;
if( requestBody.contains("some data") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response N"&#13;
}&#13;
*/&#13;
</con:dispatchPath><con:response name="Response 2" id="6c5ff216-7149-4d8d-ac34-4e08b6f96ddf" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
  "resourceType": "DocumentReference",
  "id": "fc44985cf60f613e3b2ced7656782050",
  "meta": {
    "versionId": "MTY1NTkzNTEwMTk2Nzk2NjAwMA",
    "lastUpdated": "2022-06-22T21:58:21.967966+00:00",
    "source": "gs://usmedpent-eds-qalan-cq/inbound/SPRx/e0962aac-9e7d-46f6-983b-57b1d740f312/240946.json",
    "tag": [
      {
        "code": "CQ-CCDA"
      }
    ]
  },
  "identifier": [
    {
      "type": {
        "coding": [
          {
            "system": "urn:CQ-CCDA",
            "code": "CQ_CCDA",
            "display": "CQ CCDA"
          }
        ]
      },
      "system": "urn:CQ-CCDA",
      "value": "19ad4953-c14d-2566-d7ee-a6620e06b949"
    }
  ],
  "status": "current",
  "type": {
    "coding": [
      {
        "system": "http://loinc.org",
        "code": "34133-9",
        "display": "Summary of episode note"
      }
    ]
  },
  "category": [
    {
      "coding": [
        {
          "system": "http://hl7.org/fhir/us/core/CodeSystem/us-core-documentreference-category",
          "code": "clinical-note",
          "display": "Clinical Note"
        }
      ]
    }
  ],
  "subject": {
    "reference": "Patient/4a11f29c33a374a48032dc384f69a7fb",
    "type": "Patient",
    "display": "Sheri207 Rau926"
  },
  "date": "2021-09-16T23:18:37.169916Z",
  "author": [
    {
      "display": "PCP156405"
    }
  ],
  "custodian": {
    "display": "PCP156405"
  },
  "description": "C-CDA R2.1 Patient Record: Sheri207 Rau926",
  "content": [
    {
      "attachment": {
        "contentType": "application/xml",
        "data": "",
        "url": "gs://usmedpent-eds-qalan-cq/inbound/SPRx/e0962aac-9e7d-46f6-983b-57b1d740f312/240946.json",
        "title": "gs://usmedpent-eds-qalan-cq/inbound/SPRx/e0962aac-9e7d-46f6-983b-57b1d740f312/240946.json"
      }
    }
  ]
}</con:responseContent><con:header><con:name>Access-Control-Allow-Origin</con:name><con:value>*</con:value></con:header><con:header><con:name>Access-Control-Allow-Methods</con:name><con:value>POST, GET, OPTIONS, DELETE</con:value></con:header><con:header><con:name>Access-Control-Allow-Headers</con:name><con:value>x-requested-with, Content-type, x-correlationid, verification-token, appname </con:value></con:header></con:response></con:restMockAction></con:restMockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>